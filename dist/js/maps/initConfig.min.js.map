{"version":3,"sources":["initConfig.js"],"names":["define","$","_","tr","angularAMD","app","angular","module","$app","bootstrap","config","$touchProvider","ngClickOverrideEnabled","factory","$http","$q","ajax","op","deferred","defer","method","url","baseUrl","undefined","headers","sessionId","X-Transmission-Session-Id","data","param","when","response","status","resolve","reject","errService","err","cancel","promise","service","getSession","getSessionStats","serviceAruments","all","torrentSame","detailSame","getTorrent","arguments","fields","concat","getActiveTorrent","ids","getFullDetail","getDetail","startTorrent","stopTorrent","removeFromList","removeAllData","delete-local-data","pauseTransform","startTransform","startTransformNow","controller","$scope","$sce","$timeout","ajaxService","sesseionErrCount","errStartTime","session","then","global","reason","str","temp","start","indexOf","end","substring","length","$emit","Date","getTime","now","modal","show","type","content","size","btnType","submitFunc","getStatsData","stats","console","log","getRecentlyActiveTorrentData","pool","activeTorrent","each","torrents","value","index","$index","findIndex","torrent","o","id","merge","sortTorrentData","sortBy","item","addedDate","loopGetTorrentData","obj","push","loop","setInterval","loopFragment","loopGetSessionData","selectTorrent","selectedIndex","detail","close","swip","left","w","window","width","consolePanel","right","bytesConvert","bytes","band","parseFloat2","num","parsTorrentClassName","className","parseEta","eta","secondsToTime","getStatusText","metaComplete","howLong","parseInt","getFullDate","ms","parseFullDate","parseText","Status","html","peersSendingToUs","peersConnected","rateDownload","rateUpload","peersGettingFromUs","trustAsHtml","TransformData","metadataPercentComplete","totalSize","percentDone","uploadedEver","uploadRatio","target","tabNames","tabSelect","selectedTabIndex","torrentData","fullDetail","$response","clearInterval","closeAjax","reload","validationIDS","result","isNeedTitle","title","btnText","submit","key","addClass","removeClass","document","click","init","active","sessionStats","remove","add","pause","localMode","require","localData","loadSession","$on","event","tmpUrl","blankDetail","tips","settings","addEventListener","cancelable","defaultPrevented","preventDefault","directive","restrict","link","scope","el","attrs","replaceWith","children"],"mappings":"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","file":"../initConfig.min.js","sourcesContent":["/**\r\n * Created by vincent on 2017/3/4.\r\n */\r\n\r\ndefine([\"jquery\", \"lodash\", \"transmission\", \"angularAMD\", \"angular-touch\"], function($, _, tr, angularAMD) {\r\n    \"use strict\";\r\n\r\n    var app = angular.module(\"transmission\", [\"ngTouch\"]);\r\n\r\n    var $app = angularAMD.bootstrap(app);\r\n\r\n    $app.config([\"$touchProvider\", function($touchProvider) {\r\n        $touchProvider.ngClickOverrideEnabled([true]);\r\n    }]);\r\n\r\n    $app.factory(\"ajaxService\", [\"$http\", \"$q\", function($http, $q) {\r\n        var service = {};\r\n        var baseUrl = \"/transmission/rpc\";\r\n\r\n        function ajax(op) {\r\n            var deferred = $q.defer();\r\n            var ajax = $http({\r\n                method: \"POST\",\r\n                url: baseUrl + (op.url !== undefined ? op.url : \"\"),\r\n                headers: op.sessionId !== undefined ? { \"X-Transmission-Session-Id\": op.sessionId } : {},\r\n                data: (function() {\r\n                    var param = {};\r\n                    switch (op.param.method) {\r\n                        case \"torrent-get\":\r\n                            param = op.param;\r\n                            break;\r\n                        case \"torrent-remove\":\r\n                            param = op.param;\r\n                            break;\r\n                        default:\r\n                            param = op.param;\r\n                            break;\r\n                    }\r\n                    return param;\r\n                })()\r\n            });\r\n\r\n            $q.when(ajax, function(response, status, headers, config) {\r\n                deferred.resolve(response, status, headers, config);\r\n            }, function(response, status) {\r\n                if (status !== 0) {\r\n                    deferred.reject({\r\n                        errService: op.errService ? op.errService : \"Service Error\",\r\n                        err: op.err,\r\n                        response: response,\r\n                        status: status\r\n                    });\r\n                }\r\n            });\r\n\r\n            return op.cancel === true ? deferred : deferred.promise;\r\n        }\r\n\r\n        service.getSession = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"session-get\"\r\n                },\r\n                url: \"?type=getSession\"\r\n            });\r\n        };\r\n\r\n        service.getSessionStats = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"session-stats\"\r\n                },\r\n                url: \"?type=getSessionStats\"\r\n            });\r\n        };\r\n\r\n        var serviceAruments = {\r\n            all:[\"id\"],\r\n            torrentSame: [\"error\", \"errorString\", \"eta\", \"isFinished\", \"isStalled\", \"leftUntilDone\", \"metadataPercentComplete\", \"peersConnected\", \"peersGettingFromUs\", \"peersSendingToUs\", \"percentDone\", \"queuePosition\", \"rateDownload\", \"rateUpload\", \"recheckProgress\", \"seedRatioMode\", \"seedRatioLimit\", \"sizeWhenDone\", \"status\", \"trackers\", \"downloadDir\", \"uploadedEver\", \"uploadRatio\", \"webseedsSendingToUs\"],\r\n            detailSame:[\"activityDate\",\"corruptEver\",\"desiredAvailable\",\"downloadedEver\",\"fileStats\",\"haveUnchecked\",\"haveValid\",\"peers\",\"startDate\",\"trackerStats\"]\r\n        };\r\n\r\n        service.getTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-get\",\r\n                    arguments: {\r\n                        \"fields\": _.concat(serviceAruments.all,serviceAruments.torrentSame,[\r\n                            \"addedDate\",\r\n                            \"name\",\r\n                            \"totalSize\"\r\n                        ])\r\n                    }\r\n                },\r\n                url: \"?type=getTorrent\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getActiveTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-get\",\r\n                    arguments: {\r\n                        fields: _.concat(serviceAruments.all,serviceAruments.torrentSame),\r\n                        ids: \"recently-active\"\r\n                    }\r\n                },\r\n                url: \"?type=getActiveTorrent\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getFullDetail = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-get\",\r\n                    \"arguments\": {\r\n                        \"fields\": _.concat(serviceAruments.all,serviceAruments.detailSame,[\r\n                            \"comment\",\r\n                            \"creator\",\r\n                            \"dateCreated\",\r\n                            \"files\",\r\n                            \"hashString\",\r\n                            \"isPrivate\",\r\n                            \"pieceCount\",\r\n                            \"pieceSize\"\r\n                        ]),\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=getFullDetail\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getDetail = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-get\",\r\n                    \"arguments\": {\r\n                        \"fields\": _.concat(serviceAruments.all,serviceAruments.detailSame),\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=getDetail\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.startTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-start\"\r\n                },\r\n                url: \"?type=startTorrent\"\r\n            });\r\n        };\r\n\r\n        service.stopTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-stop\"\r\n                },\r\n                url: \"?type=stopTorrent\"\r\n            });\r\n        };\r\n\r\n        service.removeFromList = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-remove\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=removeFromList\"\r\n            });\r\n        };\r\n\r\n        service.removeAllData = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-remove\",\r\n                    \"arguments\": {\r\n                        \"delete-local-data\": true,\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=removeAllData\"\r\n            });\r\n        };\r\n\r\n        service.pauseTransform = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-stop\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=torrent-stop\"\r\n            });\r\n        };\r\n\r\n        service.startTransform = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-start\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=torrent-start\"\r\n            });\r\n        };\r\n\r\n        service.startTransformNow = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-start-now\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=torrent-start-now\"\r\n            });\r\n        };\r\n        return service;\r\n    }]);\r\n\r\n    $app.controller(\"mainController\", [\"$scope\", \"$http\", \"$q\", \"$sce\", \"$timeout\", \"ajaxService\", function($scope, $http, $q, $sce, $timeout, ajaxService) {\r\n\r\n        //获取session\r\n        var sesseionErrCount = 0;\r\n        var errStartTime = \"\";\r\n        $scope.getSession = function(session) {\r\n\r\n            //获取session\r\n            ajaxService.getSession(session).then(function(response) {\r\n                $scope.data.global = response.data.arguments;\r\n            }, function(reason) {\r\n                var str = reason.response.data;\r\n                var temp = \"X-Transmission-Session-Id: \";\r\n                var start = str.indexOf(temp);\r\n                var end = str.indexOf(\"<\\/code>\");\r\n                if(start !== -1 && end !== -1){\r\n                    $scope.data.session = str.substring((start + (temp.length - 1)), end);\r\n                    $scope.$emit(\"getSessionDone\");\r\n                }else{\r\n                    //1分钟内连续错误5次则直接停止所有异步请求，并提示\r\n                    sesseionErrCount += 1;\r\n                    if(sesseionErrCount === 1){\r\n                        errStartTime = new Date().getTime();\r\n                    }else if(sesseionErrCount === 5){\r\n                        var now = new Date().getTime();\r\n                        if((errStartTime - now) <= 60000){\r\n                            $scope.modal.show({\r\n                                type:\"waring\",\r\n                                content:\"一分钟内请求Session失败次数过多，请检查网络或点击确定重新加载！\",\r\n                                size:\"small\",\r\n                                btnType : 2,\r\n                                submitFunc : function () {\r\n\r\n                                }\r\n                            });\r\n                        }else{\r\n                            sesseionErrCount = 0;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n\r\n        //获取现在的状态\r\n        $scope.getStatsData = function() {\r\n            //获取session\r\n            ajaxService.getSessionStats($scope.data.session).then(function(response) {\r\n                $scope.data.stats = response.data.arguments;\r\n                $scope.$emit(\"getStatsDone\");\r\n            }, function(reason) {\r\n                console.log(\"查询stats失败\");\r\n            });\r\n        };\r\n\r\n        //获取正在活动的Torrent数据\r\n        $scope.getRecentlyActiveTorrentData = function() {\r\n            //获取活动中的torrent数据\r\n            $scope.pool.ajax.activeTorrent = ajaxService.getActiveTorrent($scope.data.session);\r\n            $scope.pool.ajax.activeTorrent.promise.then(function(response) {\r\n                //替换数据列表中对应的数据\r\n                _.each(response.data.arguments.torrents, function(value, index) {\r\n                    var $index = _.findIndex($scope.data.torrent, function(o) {\r\n                        return o.id === value.id;\r\n                    });\r\n\r\n                    if ($index > -1) {\r\n                        _.merge($scope.data.torrent[$index], value);\r\n                    }\r\n                });\r\n            }, function(reason) {\r\n                console.log(\"查询Torrent失败\");\r\n            });\r\n        };\r\n\r\n        //排序种子数据\r\n        $scope.sortTorrentData = function() {\r\n            $scope.data.torrent = _.sortBy($scope.data.torrent, function(item) {\r\n                return -item.addedDate;\r\n            });\r\n            return $scope.data.torrent;\r\n        };\r\n\r\n        //循环获取种子数据\r\n        $scope.loopGetTorrentData = function() {\r\n            //get all torrent(list)\r\n            $scope.pool.ajax.torrent = ajaxService.getTorrent($scope.data.session);\r\n            $scope.pool.ajax.torrent.promise.then(function(response) {\r\n                $scope.data.torrent = _.sortBy(response.data.arguments.torrents, function(item) {\r\n                    return -item.addedDate;\r\n                });\r\n\r\n                $scope.data.ids = [];\r\n                _.each($scope.data.torrent, function(obj, index) {\r\n                    $scope.data.ids.push(obj.id);\r\n                });\r\n\r\n                //loop the active torrent\r\n                $scope.pool.ajax.activeTorrent = $scope.getRecentlyActiveTorrentData();\r\n                $scope.pool.loop.activeTorrent = setInterval(function() {\r\n                    $scope.getRecentlyActiveTorrentData();\r\n                }, $scope.loopFragment.torrent);\r\n            }, function(reason) {\r\n                console.log(\"查询Torrent失败\");\r\n            });\r\n        };\r\n\r\n        //循环获取session数据\r\n        $scope.loopGetSessionData = function() {\r\n            $scope.getSession($scope.data.session);\r\n            $scope.pool.loop.torrent = setInterval(function() {\r\n                $scope.getSession($scope.data.session);\r\n            }, $scope.loopFragment.session);\r\n        };\r\n\r\n        //选择某下载任务\r\n        $scope.selectTorrent = function(index) {\r\n            if (index === $scope.data.selectedIndex) {\r\n                return false;\r\n            }\r\n\r\n            $scope.data.selectedIndex = index;\r\n            if ($scope.detail.status === true) {\r\n                $scope.detail.close();\r\n                $scope.detail.show();\r\n            }\r\n        };\r\n\r\n        //滑动操作\r\n        $scope.swip = {\r\n            left: function() {\r\n\r\n                if($scope.modal.status === true){\r\n                    return false;\r\n                }\r\n\r\n                var w = $(window).width();\r\n                if (w <= 1024) {\r\n                    if ($scope.consolePanel.status === false && $scope.detail.status === false) {\r\n                        $scope.detail.show();\r\n                    } else if ($scope.consolePanel.status === true && $scope.detail.status === false) {\r\n                        $scope.consolePanel.close();\r\n                    }\r\n                }\r\n            },\r\n            right: function() {\r\n\r\n                if($scope.modal.status === true){\r\n                    return false;\r\n                }\r\n\r\n                var w = $(window).width();\r\n                if (w <= 1024) {\r\n                    if ($scope.consolePanel.status === false && $scope.detail.status === true) {\r\n                        $scope.detail.close();\r\n                    } else if ($scope.consolePanel.status === false && $scope.detail.status === false) {\r\n                        $scope.consolePanel.show();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        //流量转换\r\n        $scope.bytesConvert = function(bytes) {\r\n            var op = {\r\n                \"data\": bytes,\r\n                \"band\": 1000\r\n            };\r\n            return tr.bytesConvert(op);\r\n        };\r\n\r\n        //分析已下载数据\r\n        $scope.parseFloat2 = function(num) {\r\n            return tr.parseFloat2(num);\r\n        };\r\n\r\n        //解析下载任务的样式名\r\n        $scope.parsTorrentClassName = function(status, index) {\r\n            var className = \"\";\r\n            //4正在下载\r\n            switch (status) {\r\n                case 0:\r\n                    className = \"paused\";\r\n                    break;\r\n                case 4:\r\n                    className = \"downloading\";\r\n                    break;\r\n                case 6:\r\n                    className = \"seeding\";\r\n                    break;\r\n                default:\r\n                    className = \"seeding\";\r\n                    break;\r\n            }\r\n            if (index === $scope.data.selectedIndex) {\r\n                className += \" selected\";\r\n            }\r\n            return className;\r\n        };\r\n\r\n        //解析剩余时间\r\n        $scope.parseEta = function(eta) {\r\n            var str = \"\";\r\n            if (eta === -1) {\r\n                str = \"不可用\";\r\n            } else if (eta === -2) {\r\n                str = \"无法预估\";\r\n            } else {\r\n                str = tr.secondsToTime(eta);\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n        $scope.parseFloat2 = function(num) {\r\n            return tr.parseFloat2(num);\r\n        };\r\n\r\n        //获取状态文本\r\n        $scope.getStatusText = function(op) {\r\n            var str = \"\";\r\n            switch (op.status) {\r\n                case 0:\r\n                    if (op.metaComplete < 1) {\r\n                        str = \"磁性链接下载元数据中\";\r\n                    } else {\r\n                        str = \"已暂停\";\r\n                    }\r\n                    break;\r\n                case 4:\r\n                    str = \"下载中\";\r\n                    break;\r\n                case 6:\r\n                    str = \"做种中\";\r\n                    break;\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n        //获取运行时长\r\n        $scope.howLong = function(start) {\r\n            return $scope.parseEta(parseInt((new Date().getTime()) / 1000) - start);\r\n        };\r\n\r\n        $scope.getFullDate = function(ms) {\r\n            return tr.parseFullDate(ms);\r\n        };\r\n\r\n        //解析torrent列表文字\r\n        $scope.parseText = {\r\n            \"Status\": function(index) {\r\n                var data = $scope.data.torrent[index];\r\n                var html = \"\";\r\n\r\n                switch (data.status) {\r\n                    case 0:\r\n                        // className = \"paused\";\r\n                        html += \"已暂停\";\r\n                        break;\r\n                    case 4:\r\n                        html += \"下载自\";\r\n                        html += \"<span>\" + data.peersSendingToUs + \"/\" + data.peersConnected + \"个用户</span>\";\r\n                        html += \"<span class=\\\"icon-download\\\">\";\r\n                        html += $scope.bytesConvert(data.rateDownload) + \"/s\";\r\n                        html += \"</span>\";\r\n                        html += \"<span class=\\\"icon-upload\\\">\";\r\n                        html += $scope.bytesConvert(data.rateUpload) + \"/s\";\r\n                        html += \"</span>\";\r\n                        break;\r\n                    case 6:\r\n                        html += \"分享至\";\r\n                        html += \"<span>\" + data.peersGettingFromUs + \"/\" + data.peersConnected + \"个用户</span>\";\r\n                        html += \"<span class=\\\"icon-upload\\\">\";\r\n                        html += $scope.bytesConvert(data.rateUpload) + \"/s\";\r\n                        html += \"</span>\";\r\n                        break;\r\n                    default:\r\n                        // className = \"seeding\";\r\n                        break;\r\n                }\r\n\r\n                return $sce.trustAsHtml(html);\r\n            },\r\n            \"TransformData\": function(index) {\r\n                var data = $scope.data.torrent[index];\r\n                var html = \"\";\r\n\r\n                switch (data.status) {\r\n                    case 0:\r\n                        // className = \"paused\";\r\n                        if (data.metadataPercentComplete < 1) {\r\n                            html += \"磁性链接\";\r\n                            html += \"<span>\";\r\n                            html += \"下载元数据（\" + (data.metadataPercentComplete < 1 ? tr.parseFloat2(data.metadataPercentComplete * 100) : \"100\") + \"%）\";\r\n                            html += \"</span>\";\r\n                        } else {\r\n                            html += \"已下载\";\r\n                            html += \"<span>\";\r\n                            html += $scope.bytesConvert(data.totalSize * (data.percentDone < 1 ? data.percentDone : 1)) + \"/\" + $scope.bytesConvert(data.totalSize);\r\n                            html += \"</span>\";\r\n                            html += \"<span>\";\r\n                            html += \"(\" + (data.percentDone < 1 ? tr.parseFloat2(data.percentDone * 100) : \"100\") + \"%)\";\r\n                            html += \"</span>\";\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        // className = \"downloading\";,\r\n                        if (data.metadataPercentComplete < 1) {\r\n                            html += \"磁性链接<span> 下载元数据（\" + (data.metadataPercentComplete < 1 ? tr.parseFloat2(data.metadataPercentComplete * 100) : \"100\") + \"）</span>\";\r\n                        } else {\r\n                            html += \"已下载\";\r\n                            html += \"<span>\";\r\n                            html += $scope.bytesConvert(data.totalSize * (data.percentDone < 1 ? data.percentDone : 1)) + \"/\" + $scope.bytesConvert(data.totalSize);\r\n                            html += \"</span>\";\r\n                            html += \"<span>\";\r\n                            html += \"(\" + (data.percentDone < 1 ? tr.parseFloat2(data.percentDone * 100) : \"100\") + \"%)\";\r\n                            html += \"</span>\";\r\n                            if (data.uploadedEver > 0) {\r\n                                html += \"<span>\";\r\n                                html += \"已上传\";\r\n                                html += \"</span>\";\r\n                                html += \"<span>\";\r\n                                html += $scope.bytesConvert(data.uploadedEver);\r\n                                html += \"</span>\";\r\n                            }\r\n                            html += \"<span>\";\r\n                            html += \"预估剩余时间：\" + $scope.parseEta(data.eta);\r\n                            html += \"</span>\";\r\n                        }\r\n                        break;\r\n                    case 6:\r\n                        // className = \"seeding\";\r\n                        html += \"已上传\";\r\n                        html += \"<span>\";\r\n                        html += $scope.bytesConvert(data.uploadedEver) + \"/\" + $scope.bytesConvert(data.totalSize);\r\n                        html += \"</span>\";\r\n                        html += \"<span>\";\r\n                        html += \"分享率(\" + tr.parseFloat2(data.uploadRatio) + \"%)\";\r\n                        html += \"</span>\";\r\n                        html += \"<span>\";\r\n                        html += \"预估剩余时间：\" + $scope.parseEta(data.eta);\r\n                        html += \"</span>\";\r\n                        break;\r\n                    default:\r\n                        // className = \"seeding\";\r\n                        break;\r\n                }\r\n\r\n                return $sce.trustAsHtml(html);\r\n            }\r\n        };\r\n\r\n        //明细\r\n        $scope.detail = {\r\n            \"target\": $(\"#torrent-detail\"),\r\n            \"className\": \"show\",\r\n            \"tabNames\": [\"info\", \"peers\", \"tracker\", \"files\"],\r\n            \"tabSelect\": function(index) {\r\n                $scope.detail.selectedTabIndex = index;\r\n            },\r\n            \"status\": false,\r\n            \"torrentData\": false,\r\n            \"selectedTabIndex\": 0,\r\n            \"show\": function() {\r\n                $scope.detail.status = $scope.detail.status !== true;\r\n\r\n                if ($scope.detail.status === true) {\r\n                    if ($scope.data.selectedIndex !== '') {\r\n                        $scope.detail.torrentData = $scope.data.torrent[$scope.data.selectedIndex];\r\n                        $scope.pool.ajax.fullDetail = ajaxService.getFullDetail($scope.data.session, [$scope.data.torrent[$scope.data.selectedIndex].id]);\r\n                        $scope.pool.ajax.fullDetail.promise.then(function(response) {\r\n                            $scope.data.detail = response.data.arguments.torrents[0];\r\n                            $scope.pool.loop.detail = setInterval(function() {\r\n                                $scope.pool.ajax.detail = ajaxService.getDetail($scope.data.session, [$scope.data.torrent[$scope.data.selectedIndex].id]);\r\n                                $scope.pool.ajax.detail.promise.then(function($response) {\r\n                                    $scope.data.detail = _.merge($scope.data.detail, $response.data.arguments.torrents[0]);\r\n                                }, function(reason) {\r\n                                    console.log(\"维护明细数据失败\");\r\n                                });\r\n                            }, $scope.loopFragment.detail);\r\n                        }, function(reason) {\r\n                            console.log(\"获取明细失败\");\r\n                        });\r\n                    }\r\n                } else {\r\n                    $scope.detail.close();\r\n                }\r\n            },\r\n            \"close\": function() {\r\n                clearInterval($scope.pool.loop.detail);\r\n                $scope.detail.status = false;\r\n                $scope.closeAjax($scope.pool.ajax.fullDetail);\r\n                $scope.closeAjax($scope.pool.ajax.detail);\r\n            }\r\n        };\r\n\r\n        $scope.closeAjax = function(obj) {\r\n            if (typeof obj === \"object\" && typeof obj.resolve === \"function\") {\r\n                obj.resolve();\r\n            }\r\n        };\r\n\r\n        $scope.reload = {\r\n            \"torrent\": function() {\r\n                clearInterval($scope.pool.loop.activeTorrent);\r\n                $scope.closeAjax($scope.pool.ajax.torrent);\r\n                $scope.closeAjax($scope.pool.ajax.activeTorrent);\r\n                $scope.loopGetTorrentData();\r\n            },\r\n            \"detail\": function() {\r\n                clearInterval($scope.pool.loop.detail);\r\n                $scope.closeAjax($scope.pool.ajax.fullDetail);\r\n                $scope.closeAjax($scope.pool.ajax.detail);\r\n            }\r\n        };\r\n\r\n        var validationIDS = function(ids) {\r\n            var result = true;\r\n            if ($scope.data.torrent.length === 0 || ids === undefined || ids.length === 0 || (ids.length === 1 && ids[0] === undefined)) {\r\n                result = false;\r\n            }\r\n\r\n            if ($(window).width() <= 1024) {\r\n                $scope.consolePanel.status = false;\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        $scope.removeFromList = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            // $scope.data.session\r\n            ajaxService.removeFromList($scope.data.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"从下载列表中移除失败\");\r\n            });\r\n        };\r\n\r\n        $scope.removeFromList = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            // $scope.data.session\r\n            ajaxService.removeAllData($scope.data.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"从下载列表中移除失败\");\r\n            });\r\n        };\r\n\r\n        $scope.pauseTransform = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            ajaxService.pauseTransform($scope.data.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"暂停传输任务请求失败！\");\r\n            });\r\n        };\r\n\r\n        $scope.startTransform = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            ajaxService.startTransform($scope.data.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"暂停传输任务请求失败！\");\r\n            });\r\n        };\r\n\r\n        $scope.startTransformNow = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            ajaxService.startTransformNow($scope.data.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"暂停传输任务请求失败！\");\r\n            });\r\n        };\r\n\r\n        $scope.consolePanel = {\r\n            status: false,\r\n            show: function() {\r\n                $scope.consolePanel.status = true;\r\n            },\r\n            close: function() {\r\n                $scope.consolePanel.status = false;\r\n            }\r\n        };\r\n\r\n        $scope.modal = {\r\n            \"status\":false,\r\n            \"isNeedTitle\":false,\r\n            \"type\":\"add\",//tip,waring,delete,add,window\r\n            \"size\":\"big\",\r\n            \"title\":\"测试标题\",\r\n            \"content\":\"添加传输任务失败！\",\r\n            \"btnType\":2,//0 只有确定按钮，1 只有取消按钮，2 两个都有\r\n            \"btnText\":{\r\n                \"submit\":\"确定\",\r\n                \"cancel\":\"关闭\"\r\n            },\r\n            \"submitFunc\":function () {\r\n                $scope.modal.close();\r\n            },\r\n            \"show\":function (op) {\r\n                var className = \"alpha\";\r\n\r\n                if(op !== undefined){\r\n                    _.each(op,function (value,key) {\r\n                        if(key !== \"show\" && key !== \"close\"){\r\n                            $scope.modal[key] = value;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                $scope.modal.status = $scope.modal.status !== true;\r\n                $timeout(function () {\r\n                    $(\"#modal-bg\").addClass(className);\r\n                    $(\"#modal\").addClass(className);\r\n                },100);\r\n            },\r\n            \"close\":function () {\r\n                var className = \"alpha\";\r\n\r\n                $(\"#modal-bg\").removeClass(className);\r\n                $(\"#modal\").removeClass(className);\r\n                $timeout(function () {\r\n                    $scope.modal.status = false;\r\n                },550);\r\n            }\r\n        };\r\n\r\n        $(document).click(function () {\r\n            $scope.modal.close();\r\n        });\r\n\r\n        $scope.init = function() {\r\n\r\n            $scope.loopFragment = {\r\n                torrent: 5000,\r\n                active: 5000,\r\n                detail: 5000,\r\n                session: 15000\r\n            };\r\n\r\n            //loop pool\r\n            $scope.pool = {\r\n                \"loop\": {\r\n                    \"torrent\": \"\",\r\n                    \"activeTorrent\": \"\",\r\n                    \"session\": \"\",\r\n                    \"detail\": \"\"\r\n                },\r\n                \"ajax\": {\r\n                    \"torrent\": {},\r\n                    \"activeTorrent\": {},\r\n                    \"detail\": {},\r\n                    \"fullDetail\": {},\r\n                    \"sessionStats\":{},\r\n                    \"session\":{},\r\n                    \"remove\":{},\r\n                    \"add\":{},\r\n                    \"pause\":{}\r\n                }\r\n            };\r\n\r\n            //数据\r\n            $scope.data = {\r\n            \tsession: \"\",\r\n                global: {},\r\n                torrent: [],\r\n                selectedIndex: \"\",\r\n                stats: {},\r\n                ids: [],\r\n                detail: {}\r\n            };\r\n\r\n            //load local data\r\n            $scope.localMode = true;\r\n\r\n            if ($scope.localMode === true) {\r\n                var deferred = $q.defer();\r\n\r\n                require([\"localData\"], function(localData) {\r\n                    deferred.resolve(localData);\r\n                });\r\n\r\n                deferred.promise.then(function(response) {\r\n                    $scope.data = {\r\n                        global: response.global,\r\n                        torrent: response.torrent,\r\n                        selectedIndex: response.selectedIndex,\r\n                        stats: response.stats,\r\n                        ids: response.ids,\r\n                        detail: response.detail\r\n                    };\r\n                }, function(reason) {\r\n\r\n                });\r\n            }\r\n\r\n            //连续获取seesion\r\n            var loadSession = setInterval(function() {\r\n                $scope.getSession();\r\n            }, 3000);\r\n            //获取到session后结束循环获取session\r\n            $scope.$on(\"getSessionDone\", function(event) {\r\n                clearInterval(loadSession);\r\n\r\n                $scope.loopGetSessionData();\r\n\r\n                $scope.getStatsData();\r\n            });\r\n\r\n            $scope.$on(\"getStatsDone\", function() {\r\n                $scope.loopGetTorrentData();\r\n            });\r\n\r\n            $scope.tmpUrl = {\r\n                detail: \"template/detail.html\",\r\n                blankDetail: \"template/blankdetail.html\",\r\n                tips: \"template/tips.html\",\r\n                settings: \"template/settings.html\",\r\n                modal:\"template/tips.html\"\r\n            };\r\n\r\n            document.addEventListener('touchstart', function(event) {\r\n                // 判断默认行为是否可以被禁用\r\n                if (event.cancelable) {\r\n                    // 判断默认行为是否已经被禁用\r\n                    if (!event.defaultPrevented) {\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n            }, false);\r\n        };\r\n\r\n        $scope.init();\r\n\r\n    }]);\r\n\r\n    //inlclude 直接用被嵌套的HTML替换include所在的标签\r\n    $app.directive('includeReplace', function() {\r\n        return {\r\n            require: 'ngInclude',\r\n            restrict: 'A',\r\n            /* optional */\r\n            link: function(scope, el, attrs) {\r\n                el.replaceWith(el.children());\r\n            }\r\n        };\r\n    });\r\n\r\n    return $app;\r\n});\r\n"]}