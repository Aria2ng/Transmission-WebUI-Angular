{"version":3,"names":[],"mappings":"","sources":["initConfig.js"],"sourcesContent":["/**\r\n * Created by vincent on 2017/3/4.\r\n */\r\n\r\ndefine([\"jquery\", \"lodash\", \"transmission\", \"angularAMD\", \"mnTouch\"], function($, _, tr, angularAMD) {\r\n    \"use strict\";\r\n\r\n    var app = angular.module(\"transmission\", [\"mn\"]);\r\n\r\n    var $app = angularAMD.bootstrap(app);\r\n\r\n    $app.factory(\"ajaxService\", [\"$http\", \"$q\", function($http, $q) {\r\n        var service = {};\r\n        var baseUrl = \"/transmission/rpc\";\r\n\r\n        function ajax(op) {\r\n            var deferred = $q.defer();\r\n            var ajax = $http({\r\n                method: \"POST\",\r\n                url: baseUrl + (op.url !== undefined ? op.url : \"\"),\r\n                headers: op.sessionId !== undefined ? { \"X-Transmission-Session-Id\": op.sessionId } : {},\r\n                data: (function() {\r\n                    var param = {};\r\n                    switch (op.param.method) {\r\n                        case \"torrent-get\":\r\n                            param = op.param;\r\n                            break;\r\n                        case \"torrent-remove\":\r\n                            param = op.param;\r\n                            break;\r\n                        default:\r\n                            param = op.param;\r\n                            break;\r\n                    }\r\n                    return param;\r\n                })()\r\n            });\r\n\r\n            $q.when(ajax, function(response, status, headers, config) {\r\n                deferred.resolve(response, status, headers, config);\r\n            }, function(response, status) {\r\n                if (status !== 0) {\r\n                    deferred.reject({\r\n                        errService: op.errService ? op.errService : \"Service Error\",\r\n                        err: op.err,\r\n                        response: response,\r\n                        status: status\r\n                    });\r\n                }\r\n            });\r\n\r\n            return op.cancel === true ? deferred : deferred.promise;\r\n        }\r\n\r\n        service.getSession = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"session-get\"\r\n                },\r\n                url: \"?type=getSession\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getSessionStats = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"session-stats\"\r\n                },\r\n                url: \"?type=getSessionStats\"\r\n            });\r\n        };\r\n\r\n        var serviceAruments = {\r\n            all:[\"id\"],\r\n            torrentSame: [\"error\", \"errorString\", \"eta\", \"isFinished\", \"isStalled\", \"leftUntilDone\", \"metadataPercentComplete\", \"peersConnected\", \"peersGettingFromUs\", \"peersSendingToUs\", \"percentDone\", \"queuePosition\", \"rateDownload\", \"rateUpload\", \"recheckProgress\", \"seedRatioMode\", \"seedRatioLimit\", \"sizeWhenDone\", \"status\", \"trackers\", \"downloadDir\", \"uploadedEver\", \"uploadRatio\", \"webseedsSendingToUs\"],\r\n            detailSame:[\"activityDate\",\"corruptEver\",\"desiredAvailable\",\"downloadedEver\",\"fileStats\",\"haveUnchecked\",\"haveValid\",\"peers\",\"startDate\",\"trackerStats\"]\r\n        };\r\n\r\n        service.getTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-get\",\r\n                    arguments: {\r\n                        \"fields\": _.concat(serviceAruments.all,serviceAruments.torrentSame,[\r\n                            \"addedDate\",\r\n                            \"name\",\r\n                            \"totalSize\"\r\n                        ])\r\n                    }\r\n                },\r\n                url: \"?type=getTorrent\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getActiveTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-get\",\r\n                    arguments: {\r\n                        fields: _.concat(serviceAruments.all,serviceAruments.torrentSame),\r\n                        ids: \"recently-active\"\r\n                    }\r\n                },\r\n                url: \"?type=getActiveTorrent\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getFullDetail = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-get\",\r\n                    \"arguments\": {\r\n                        \"fields\": _.concat(serviceAruments.all,serviceAruments.detailSame,[\r\n                            \"comment\",\r\n                            \"creator\",\r\n                            \"dateCreated\",\r\n                            \"files\",\r\n                            \"hashString\",\r\n                            \"isPrivate\",\r\n                            \"pieceCount\",\r\n                            \"pieceSize\"\r\n                        ]),\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=getFullDetail\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getDetail = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-get\",\r\n                    \"arguments\": {\r\n                        \"fields\": _.concat(serviceAruments.all,serviceAruments.detailSame),\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=getDetail\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.startTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-start\"\r\n                },\r\n                url: \"?type=startTorrent\"\r\n            });\r\n        };\r\n\r\n        service.stopTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-stop\"\r\n                },\r\n                url: \"?type=stopTorrent\"\r\n            });\r\n        };\r\n\r\n        service.removeFromList = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-remove\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=removeFromList\"\r\n            });\r\n        };\r\n\r\n        service.removeAllData = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-remove\",\r\n                    \"arguments\": {\r\n                        \"delete-local-data\": true,\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=removeAllData\"\r\n            });\r\n        };\r\n\r\n        service.pauseTransform = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-stop\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=torrent-stop\"\r\n            });\r\n        };\r\n\r\n        service.startTransform = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-start\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=torrent-start\"\r\n            });\r\n        };\r\n\r\n        service.startTransformNow = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-start-now\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=torrent-start-now\"\r\n            });\r\n        };\r\n        return service;\r\n    }]);\r\n\r\n    $app.controller(\"mainController\", [\"$scope\", \"$http\", \"$q\", \"$sce\", \"$timeout\", \"$window\", \"$document\", \"ajaxService\", function($scope, $http, $q, $sce, $timeout, $window, $document, ajaxService) {\r\n\r\n        //获取session\r\n        var sesseionErrCount = 0;\r\n        var errStartTime = \"\";\r\n        $scope.getSession = function(session) {\r\n\r\n            //获取session\r\n            $scope.pool.ajax.session = ajaxService.getSession(session);\r\n            $scope.pool.ajax.session.promise.then(function(response) {\r\n                sesseionErrCount = 0;\r\n                $scope.dataStorage.global = response.data.arguments;\r\n            }, function(reason) {\r\n                var val = true;\r\n                var str = reason.response.data;\r\n                if(str === null){\r\n                    val = false;\r\n                }\r\n\r\n                if(val === true){\r\n                    var temp = \"X-Transmission-Session-Id: \";\r\n                    var start = str.indexOf(temp);\r\n                    var end = str.indexOf(\"<\\/code>\");\r\n                    if(start !== -1 && end !== -1){\r\n                        $scope.dataStorage.session = str.substring((start + (temp.length - 1)), end);\r\n                        $scope.$emit(\"getSessionDone\");\r\n                    }else{\r\n                        val = false;\r\n                    }\r\n                }\r\n\r\n                if(val === false){\r\n                    //1分钟内连续错误5次则直接停止所有异步请求，并提示\r\n                    sesseionErrCount += 1;\r\n                    if(sesseionErrCount === 1){\r\n                        errStartTime = new Date().getTime();\r\n                    }else if(sesseionErrCount >= 5){\r\n                        var now = new Date().getTime();\r\n                        if((now - errStartTime) <= 60000){\r\n                            $scope.stopAllAjax();\r\n                            $scope.modal.show({\r\n                                type:\"waring\",\r\n                                title:\"一分钟内请求Session失败次数过多\",\r\n                                content:\"请检查您的网络是否顺畅，或点击确定通过刷新尝试解决！\",\r\n                                size:\"small\",\r\n                                btnType : 2,\r\n                                submitFunc : function () {\r\n                                    $window.location.reload();\r\n                                }\r\n                            });\r\n                        }else{\r\n                            sesseionErrCount = 0;\r\n                            errStartTime = new Date().getTime();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n\r\n        //循环获取session数据\r\n        $scope.loopGetSessionData = function() {\r\n            $scope.getSession($scope.dataStorage.session);\r\n            $scope.pool.loop.session = setInterval(function() {\r\n                $scope.getSession($scope.dataStorage.session);\r\n            }, $scope.loopFragment.session);\r\n        };\r\n\r\n        //获取现在的状态\r\n        $scope.getStatsData = function() {\r\n            //获取session\r\n            $scope.pool.ajax.sessionStats = ajaxService.getSessionStats($scope.dataStorage.session).then(function(response) {\r\n                $scope.dataStorage.stats = response.data.arguments;\r\n                $scope.dataStorage.totalSpeed.download = $scope.dataStorage.stats.downloadSpeed;\r\n                $scope.dataStorage.totalSpeed.upload = $scope.dataStorage.stats.uploadSpeed;\r\n                $scope.$emit(\"getStatsDone\");\r\n            }, function(reason) {\r\n                $scope.modal.show({\r\n                    type:\"waring\",\r\n                    title:\"查询统计数据失败\",\r\n                    content:\"请检查您的网络是否顺畅，或点击确定重新加载一次！\",\r\n                    size:\"small\",\r\n                    btnType : 2,\r\n                    submitFunc : function () {\r\n                        $scope.getStatsData();\r\n                    }\r\n                });\r\n            });\r\n        };\r\n\r\n        //获取正在活动的Torrent数据\r\n        var activeErrCount = 0;\r\n        var activeStartTime = 0;\r\n        $scope.getRecentlyActiveTorrentData = function() {\r\n            //获取活动中的torrent数据\r\n            $scope.pool.ajax.activeTorrent = ajaxService.getActiveTorrent($scope.dataStorage.session);\r\n            $scope.pool.ajax.activeTorrent.promise.then(function(response) {\r\n                activeErrCount = 0;\r\n                //替换数据列表中对应的数据\r\n                _.each(response.data.arguments.torrents, function(value, index) {\r\n                    var $index = _.findIndex($scope.dataStorage.torrent, function(o) {\r\n                        return o.id === value.id;\r\n                    });\r\n\r\n                    if ($index > -1) {\r\n                        _.merge($scope.dataStorage.torrent[$index], value);\r\n                    }\r\n                });\r\n                $scope.getTotalSpeed();\r\n            }, function(reason) {\r\n                activeErrCount += 1;\r\n                if(activeErrCount === 1){\r\n                    activeStartTime = new Date().getTime();\r\n                }else if(sesseionErrCount >= 5){\r\n                    var now = new Date().getTime();\r\n                    if((now - activeStartTime) <= 60000){\r\n                        clearInterval($scope.pool.loop.activeTorrent);\r\n                        $scope.closeAjax($scope.pool.ajax.torrent);\r\n                        $scope.modal.show({\r\n                            type:\"waring\",\r\n                            title:\"短期内多次查询活动任务失败\",\r\n                            content:\"请检查您的网络是否顺畅，或点击确定通过刷新尝试解决！\",\r\n                            size:\"small\",\r\n                            btnType : 2,\r\n                            submitFunc : function () {\r\n                                $scope.loopGetTorrentData();\r\n                            }\r\n                        });\r\n                    }else{\r\n                        activeErrCount = 0;\r\n                        activeStartTime = new Date().getTime();\r\n                    }\r\n                }\r\n            });\r\n        };\r\n\r\n        //排序种子数据\r\n        $scope.sortTorrentData = function() {\r\n            $scope.dataStorage.torrent = _.sortBy($scope.dataStorage.torrent, function(item) {\r\n                return -item.addedDate;\r\n            });\r\n            $scope.getTotalSpeed();\r\n            return $scope.dataStorage.torrent;\r\n        };\r\n\r\n        //循环获取种子数据\r\n        $scope.loopGetTorrentData = function() {\r\n            //get all torrent(list)\r\n            $scope.pool.ajax.torrent = ajaxService.getTorrent($scope.dataStorage.session);\r\n            $scope.pool.ajax.torrent.promise.then(function(response) {\r\n                $scope.dataStorage.torrent = _.sortBy(response.data.arguments.torrents, function(item) {\r\n                    return -item.addedDate;\r\n                });\r\n\r\n                $scope.dataStorage.ids = [];\r\n                _.each($scope.dataStorage.torrent, function(obj, index) {\r\n                    $scope.dataStorage.ids.push(obj.id);\r\n                });\r\n\r\n                $scope.allLoaded = true;\r\n                $(\"#loading\").addClass(\"loading-hide\");\r\n                setTimeout(function () {\r\n                    $(\"#loading\").remove();\r\n                },1000);\r\n\r\n                $(\".hide\").removeClass(\"hide\");\r\n\r\n                //loop the active torrent\r\n                $scope.pool.ajax.activeTorrent = $scope.getRecentlyActiveTorrentData();\r\n                $scope.pool.loop.activeTorrent = setInterval(function() {\r\n                    $scope.getRecentlyActiveTorrentData();\r\n                }, $scope.loopFragment.torrent);\r\n            }, function(reason) {\r\n                $scope.modal.show({\r\n                    type:\"waring\",\r\n                    title:\"获取传输任务列表数据失败\",\r\n                    content:\"请检查您的网络是否顺畅，或点击确定重新加载一次！\",\r\n                    size:\"small\",\r\n                    btnType : 2,\r\n                    submitFunc : function () {\r\n                        $scope.loopGetTorrentData();\r\n                    }\r\n                });\r\n            });\r\n        };\r\n\r\n        //选择某下载任务\r\n        $scope.selectTorrent = function(index) {\r\n            if (index === $scope.dataStorage.selectedIndex) {\r\n                return false;\r\n            }\r\n            $scope.dataStorage.selectedIndex = index;\r\n            if ($scope.detail.status === true) {\r\n                $scope.detail.close();\r\n                $scope.detail.show();\r\n            }\r\n        };\r\n\r\n        //滑动操作\r\n        $scope.swip = {\r\n            left: function() {\r\n\r\n                if($scope.modal.status === true){\r\n                    return false;\r\n                }\r\n\r\n                if($scope.nav.status === true){\r\n                    $scope.nav.close();\r\n                }\r\n\r\n                if ($scope.getScreenWidth() <= 1024) {\r\n                    if ($scope.consolePanel.status === false && $scope.detail.status === false) {\r\n                        $scope.detail.show();\r\n                    } else if ($scope.consolePanel.status === true && $scope.detail.status === false) {\r\n                        $scope.consolePanel.close();\r\n                    }\r\n                }\r\n            },\r\n            right: function() {\r\n\r\n                if($scope.modal.status === true){\r\n                    return false;\r\n                }\r\n\r\n                if($scope.nav.status === true){\r\n                    $scope.nav.close();\r\n                }\r\n\r\n                if ($scope.getScreenWidth() <= 1024) {\r\n                    if ($scope.consolePanel.status === false && $scope.detail.status === true) {\r\n                        $scope.detail.close();\r\n                    } else if ($scope.consolePanel.status === false && $scope.detail.status === false) {\r\n                        $scope.consolePanel.show();\r\n                    }\r\n                }\r\n            },\r\n            up:function ($event) {\r\n                if($scope.modal.status === true || $scope.consolePanel.status === true || $scope.detail.status === true){\r\n                    return false;\r\n                }else{\r\n                    $scope.nav.close();\r\n                }\r\n            },\r\n            down:function () {\r\n                if($scope.modal.status === true || $scope.consolePanel.status === true || $scope.detail.status === true){\r\n                    return false;\r\n                }else{\r\n                    $scope.nav.show();\r\n                }\r\n            }\r\n        };\r\n\r\n        //流量转换\r\n        $scope.bytesConvert = function(bytes) {\r\n            var op = {\r\n                \"data\": bytes,\r\n                \"band\": 1000\r\n            };\r\n            return tr.bytesConvert(op);\r\n        };\r\n\r\n        //分析已下载数据\r\n        $scope.parseFloat2 = function(num) {\r\n            return tr.parseFloat2(num);\r\n        };\r\n\r\n        //解析下载任务的样式名\r\n        $scope.parsTorrentClassName = function(status, index) {\r\n            var className = \"\";\r\n            //4正在下载\r\n            switch (status) {\r\n                case 0:\r\n                    className = \"paused\";\r\n                    break;\r\n                case 4:\r\n                    className = \"downloading\";\r\n                    break;\r\n                case 6:\r\n                    className = \"seeding\";\r\n                    break;\r\n                default:\r\n                    className = \"seeding\";\r\n                    break;\r\n            }\r\n            if (index === $scope.dataStorage.selectedIndex) {\r\n                className += \" selected\";\r\n            }\r\n            return className;\r\n        };\r\n\r\n        //解析剩余时间\r\n        $scope.parseEta = function(eta) {\r\n            var str = \"\";\r\n            if (eta === -1) {\r\n                str = \"不可用\";\r\n            } else if (eta === -2) {\r\n                str = \"无法预估\";\r\n            } else {\r\n                str = tr.secondsToTime(eta);\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n        $scope.parseFloat2 = function(num) {\r\n            return tr.parseFloat2(num);\r\n        };\r\n\r\n        //获取状态文本\r\n        $scope.getStatusText = function(op) {\r\n            var str = \"\";\r\n            switch (op.status) {\r\n                case 0:\r\n                    if (op.metaComplete < 1) {\r\n                        str = \"磁性链接下载元数据中\";\r\n                    } else {\r\n                        str = \"已暂停\";\r\n                    }\r\n                    break;\r\n                case 4:\r\n                    str = \"下载中\";\r\n                    break;\r\n                case 6:\r\n                    str = \"做种中\";\r\n                    break;\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n        //获取运行时长\r\n        $scope.howLong = function(start) {\r\n            return $scope.parseEta(parseInt((new Date().getTime()) / 1000) - start);\r\n        };\r\n\r\n        $scope.getFullDate = function(ms) {\r\n            return tr.parseFullDate(ms);\r\n        };\r\n\r\n        //解析torrent列表文字\r\n        $scope.parseText = {\r\n            \"Status\": function(index) {\r\n                var data = $scope.dataStorage.torrent[index];\r\n                var html = \"\";\r\n\r\n                switch (data.status) {\r\n                    case 0:\r\n                        // className = \"paused\";\r\n                        html += \"已暂停\";\r\n                        break;\r\n                    case 4:\r\n                        html += \"下载自\";\r\n                        html += \"<span>\" + data.peersSendingToUs + \"/\" + data.peersConnected + \"个用户</span>\";\r\n                        html += \"<span class=\\\"icon-download\\\">\";\r\n                        html += $scope.bytesConvert(data.rateDownload) + \"/s\";\r\n                        html += \"</span>\";\r\n                        html += \"<span class=\\\"icon-upload\\\">\";\r\n                        html += $scope.bytesConvert(data.rateUpload) + \"/s\";\r\n                        html += \"</span>\";\r\n                        break;\r\n                    case 6:\r\n                        html += \"分享至\";\r\n                        html += \"<span>\" + data.peersGettingFromUs + \"/\" + data.peersConnected + \"个用户</span>\";\r\n                        html += \"<span class=\\\"icon-upload\\\">\";\r\n                        html += $scope.bytesConvert(data.rateUpload) + \"/s\";\r\n                        html += \"</span>\";\r\n                        break;\r\n                    default:\r\n                        // className = \"seeding\";\r\n                        break;\r\n                }\r\n\r\n                return $sce.trustAsHtml(html);\r\n            },\r\n            \"TransformData\": function(index) {\r\n                var data = $scope.dataStorage.torrent[index];\r\n                var html = \"\";\r\n\r\n                switch (data.status) {\r\n                    case 0:\r\n                        // className = \"paused\";\r\n                        if (data.metadataPercentComplete < 1) {\r\n                            html += \"磁性链接\";\r\n                            html += \"<span>\";\r\n                            html += \"下载元数据（\" + (data.metadataPercentComplete < 1 ? tr.parseFloat2(data.metadataPercentComplete * 100) : \"100\") + \"%）\";\r\n                            html += \"</span>\";\r\n                        } else {\r\n                            html += \"已下载\";\r\n                            html += \"<span>\";\r\n                            html += $scope.bytesConvert(data.totalSize * (data.percentDone < 1 ? data.percentDone : 1)) + \"/\" + $scope.bytesConvert(data.totalSize);\r\n                            html += \"</span>\";\r\n                            html += \"<span>\";\r\n                            html += \"(\" + (data.percentDone < 1 ? tr.parseFloat2(data.percentDone * 100) : \"100\") + \"%)\";\r\n                            html += \"</span>\";\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        // className = \"downloading\";,\r\n                        if (data.metadataPercentComplete < 1) {\r\n                            html += \"磁性链接<span> 下载元数据（\" + (data.metadataPercentComplete < 1 ? tr.parseFloat2(data.metadataPercentComplete * 100) : \"100\") + \"）</span>\";\r\n                        } else {\r\n                            html += \"已下载\";\r\n                            html += \"<span>\";\r\n                            html += $scope.bytesConvert(data.totalSize * (data.percentDone < 1 ? data.percentDone : 1)) + \"/\" + $scope.bytesConvert(data.totalSize);\r\n                            html += \"</span>\";\r\n                            html += \"<span>\";\r\n                            html += \"(\" + (data.percentDone < 1 ? tr.parseFloat2(data.percentDone * 100) : \"100\") + \"%)\";\r\n                            html += \"</span>\";\r\n                            if (data.uploadedEver > 0) {\r\n                                html += \"<span>\";\r\n                                html += \"已上传\";\r\n                                html += \"</span>\";\r\n                                html += \"<span>\";\r\n                                html += $scope.bytesConvert(data.uploadedEver);\r\n                                html += \"</span>\";\r\n                            }\r\n                            if ($scope.getScreenWidth() > 1024) {\r\n                                html += \"<span>\";\r\n                                html += \"预估剩余时间：\" + $scope.parseEta(data.eta);\r\n                                html += \"</span>\";\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 6:\r\n                        // className = \"seeding\";\r\n                        html += \"已上传\";\r\n                        html += \"<span>\";\r\n                        html += $scope.bytesConvert(data.uploadedEver) + \"/\" + $scope.bytesConvert(data.totalSize);\r\n                        html += \"</span>\";\r\n                        html += \"<span>\";\r\n                        html += \"分享率(\" + tr.parseFloat2(data.uploadRatio) + \"%)\";\r\n                        html += \"</span>\";\r\n                        if ($scope.getScreenWidth() > 1024) {\r\n                            html += \"<span>\";\r\n                            html += \"预估剩余时间：\" + $scope.parseEta(data.eta);\r\n                            html += \"</span>\";\r\n                        }\r\n                        break;\r\n                    default:\r\n                        // className = \"seeding\";\r\n                        break;\r\n                }\r\n\r\n                return $sce.trustAsHtml(html);\r\n            }\r\n        };\r\n\r\n        //明细\r\n        $scope.detail = {\r\n            \"target\": $(\"#torrent-detail\"),\r\n            \"className\": \"show\",\r\n            \"tabNames\": [\"info\", \"peers\", \"tracker\", \"files\"],\r\n            \"tabSelect\": function(index) {\r\n                $scope.detail.selectedTabIndex = index;\r\n            },\r\n            \"status\": false,\r\n            \"torrentData\": false,\r\n            \"selectedTabIndex\": 0,\r\n            \"loopGetDetail\":function () {\r\n                $scope.pool.ajax.fullDetail = ajaxService.getFullDetail($scope.dataStorage.session, [$scope.dataStorage.torrent[$scope.dataStorage.selectedIndex].id]);\r\n                $scope.pool.ajax.fullDetail.promise.then(function(response) {\r\n                    $scope.dataStorage.detail = response.data.arguments.torrents[0];\r\n                    $scope.pool.loop.detail = setInterval(function() {\r\n                        $scope.pool.ajax.detail = ajaxService.getDetail($scope.dataStorage.session, [$scope.dataStorage.torrent[$scope.dataStorage.selectedIndex].id]);\r\n                        $scope.pool.ajax.detail.promise.then(function($response) {\r\n                            $scope.dataStorage.detail = _.merge($scope.dataStorage.detail, $response.data.arguments.torrents[0]);\r\n                        }, function(reason) {\r\n                            clearInterval($scope.pool.loop.detail);\r\n                            $scope.closeAjax($scope.pool.ajax.fullDetail);\r\n                            $scope.closeAjax($scope.pool.ajax.detail);\r\n                            $scope.modal.show({\r\n                                type:\"waring\",\r\n                                title:\"维护明细数据失败\",\r\n                                content:\"请检查您的网络是否顺畅，或点击确定通过刷新尝试解决！\",\r\n                                size:\"small\",\r\n                                btnType : 2,\r\n                                submitFunc : function () {\r\n                                    $scope.detail.loopGetDetail();\r\n                                }\r\n                            });\r\n                        });\r\n                    }, $scope.loopFragment.detail);\r\n                }, function(reason) {\r\n                    $scope.modal.show({\r\n                        type:\"waring\",\r\n                        title:\"获取明细数据失败\",\r\n                        content:\"请检查您的网络是否顺畅！\",\r\n                        size:\"small\",\r\n                        btnType : 1\r\n                    });\r\n                });\r\n            },\r\n            \"show\": function() {\r\n                $scope.detail.status = $scope.detail.status !== true;\r\n\r\n                if ($scope.detail.status === true) {\r\n                    if ($scope.dataStorage.selectedIndex !== '') {\r\n                        $scope.detail.torrentData = $scope.dataStorage.torrent[$scope.dataStorage.selectedIndex];\r\n                        $scope.detail.loopGetDetail();\r\n                    }\r\n                } else {\r\n                    $scope.detail.close();\r\n                }\r\n            },\r\n            \"close\": function() {\r\n                $scope.detail.status = false;\r\n                clearInterval($scope.pool.loop.detail);\r\n                $scope.closeAjax($scope.pool.ajax.fullDetail);\r\n                $scope.closeAjax($scope.pool.ajax.detail);\r\n            }\r\n        };\r\n\r\n        $scope.closeAjax = function(obj) {\r\n            if (typeof obj === \"object\" && typeof obj.resolve === \"function\") {\r\n                obj.resolve();\r\n            }\r\n        };\r\n\r\n        $scope.reload = {\r\n            \"torrent\": function() {\r\n                clearInterval($scope.pool.loop.activeTorrent);\r\n                $scope.closeAjax($scope.pool.ajax.torrent);\r\n                $scope.closeAjax($scope.pool.ajax.activeTorrent);\r\n                $scope.loopGetTorrentData();\r\n            },\r\n            \"detail\": function() {\r\n                clearInterval($scope.pool.loop.detail);\r\n                $scope.closeAjax($scope.pool.ajax.fullDetail);\r\n                $scope.closeAjax($scope.pool.ajax.detail);\r\n                $scope.detail.loopGetDetail();\r\n            }\r\n        };\r\n\r\n        var validationIDS = function(ids) {\r\n            var result = true;\r\n            if ($scope.dataStorage.torrent.length === 0 || ids === undefined || ids.length === 0 || (ids.length === 1 && ids[0] === undefined)) {\r\n                result = false;\r\n            }\r\n\r\n            if ($(window).width() <= 1024) {\r\n                $scope.consolePanel.status = false;\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        $scope.removeFromList = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            // $scope.dataStorage.session\r\n            ajaxService.removeFromList($scope.dataStorage.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                $scope.modal.show({\r\n                    type:\"waring\",\r\n                    title:\"从下载列表中移除任务失败\",\r\n                    content:\"请检查您的网络是否顺畅！\",\r\n                    size:\"small\",\r\n                    btnType : 1\r\n                });\r\n            });\r\n        };\r\n\r\n        $scope.pauseTransform = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            ajaxService.pauseTransform($scope.dataStorage.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                $scope.modal.show({\r\n                    type:\"waring\",\r\n                    title:\"暂停传输任务请求失败！\",\r\n                    content:\"请检查您的网络是否顺畅！\",\r\n                    size:\"small\",\r\n                    btnType : 1\r\n                });\r\n            });\r\n        };\r\n\r\n        $scope.startTransform = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            ajaxService.startTransform($scope.dataStorage.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                $scope.modal.show({\r\n                    type:\"waring\",\r\n                    title:\"开始传输任务请求失败！\",\r\n                    content:\"请检查您的网络是否顺畅！\",\r\n                    size:\"small\",\r\n                    btnType : 1\r\n                });\r\n            });\r\n        };\r\n\r\n        $scope.startTransformNow = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            ajaxService.startTransformNow($scope.dataStorage.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                $scope.modal.show({\r\n                    type:\"waring\",\r\n                    title:\"立即开始传输任务请求失败！\",\r\n                    content:\"请检查您的网络是否顺畅！\",\r\n                    size:\"small\",\r\n                    btnType : 1\r\n                });\r\n            });\r\n        };\r\n\r\n        $scope.consolePanel = {\r\n            status: false,\r\n            show: function() {\r\n                $scope.consolePanel.status = true;\r\n            },\r\n            close: function() {\r\n                $scope.consolePanel.status = false;\r\n            }\r\n        };\r\n\r\n        $scope.modal = {\r\n            \"status\":false,\r\n            \"isNeedTitle\":false,\r\n            \"type\":\"add\",//tip,waring,delete,add,window\r\n            \"size\":\"small\",\r\n            \"title\":\"添加传输任务失败\",\r\n            \"content\":\"请检查你的网络，或者尝试重新添加一次！\",\r\n            \"btnType\":2,//0 只有确定按钮，1 只有取消按钮，2 两个都有\r\n            \"btnText\":{\r\n                \"submit\":\"确定\",\r\n                \"cancel\":\"关闭\"\r\n            },\r\n            \"submitFunc\":function () {\r\n                $scope.modal.close();\r\n            },\r\n            \"show\":function (op) {\r\n                if(op !== undefined && op.$event!==null && op.$event!==undefined){\r\n                    op.$event.stopPropagation();\r\n                }\r\n\r\n                if($scope.modal.status === true){\r\n                    return false;\r\n                }\r\n\r\n                var className = \"alpha\";\r\n\r\n                if(op !== undefined){\r\n                    _.each(op,function (value,key) {\r\n                        if(key !== \"show\" && key !== \"close\"){\r\n                            $scope.modal[key] = value;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                $scope.modal.status = $scope.modal.status !== true;\r\n                $timeout(function () {\r\n                    $(\"#modal-bg\").addClass(className);\r\n                    $(\"#modal\").addClass(className);\r\n                },100);\r\n            },\r\n            \"close\":function () {\r\n                var className = \"alpha\";\r\n\r\n                $(\"#modal-bg\").removeClass(className);\r\n                $(\"#modal\").removeClass(className);\r\n                $timeout(function () {\r\n                    $scope.modal.status = false;\r\n                },550);\r\n            }\r\n        };\r\n\r\n        $timeout(function () {\r\n            $document.click(function () {\r\n                if($scope.modal.status === true){\r\n                    $scope.modal.close();\r\n                }\r\n\r\n                // if($scope.nav.status === true){\r\n                //     $scope.nav.close();\r\n                // }\r\n            });\r\n        });\r\n\r\n        $scope.nav = {\r\n            status:false,\r\n            menudata:{\r\n                name:[\"设置\",\"计划任务运行\",\"收缩视图\",\"查看传输明细\"],\r\n                className:[\"icon-settings\",\"icon-scheduled\",\"icon-listview\",\"icon-info-black\"]\r\n            },\r\n            toggle:function () {\r\n                if($scope.allLoaded === false){\r\n                    return false;\r\n                }\r\n                $scope.nav.status = $scope.nav.status !== true;\r\n            },\r\n            show:function () {\r\n                $scope.nav.status = true;\r\n            },\r\n            close:function (index) {\r\n                $scope.nav.status = false;\r\n            },\r\n            parseMenuVisible:function ($index) {\r\n                return ($index < 3);\r\n            }\r\n        };\r\n\r\n        $scope.getTotalSpeed = function () {\r\n            var result = {\r\n                download:0,\r\n                upload:0\r\n            };\r\n\r\n            _.each($scope.dataStorage.torrent,function (obj,index) {\r\n                result.download += (obj.rateDownload === undefined || obj.rateDownload === null) ? 0 :obj.rateDownload;\r\n                result.upload += (obj.rateUpload === undefined || obj.rateUpload === null) ? 0 :obj.rateUpload;\r\n            });\r\n\r\n            $scope.dataStorage.totalSpeed.download = result.download;\r\n            $scope.dataStorage.totalSpeed.upload = result.upload;\r\n        };\r\n\r\n        $scope.getScreenWidth = function () {\r\n            return $(window).width();\r\n        };\r\n\r\n        $scope.stopAllAjax = function () {\r\n            _.each($scope.pool.loop,function (value,key) {\r\n                clearInterval($scope.pool.loop[key]);\r\n            });\r\n            _.each($scope.pool.ajax,function (value,key) {\r\n                $scope.closeAjax($scope.pool.ajax[key]);\r\n            });\r\n        };\r\n\r\n        $scope.init = function() {\r\n\r\n            $scope.loopFragment = {\r\n                torrent: 5000,\r\n                active: 5000,\r\n                detail: 5000,\r\n                session: 15000\r\n            };\r\n\r\n            if($scope.getScreenWidth() >= 1024){\r\n                var doc = window.document;\r\n                var docEl = doc.documentElement;\r\n\r\n                var requestFullScreen = docEl.requestFullscreen || docEl.mozRequestFullScreen || docEl.webkitRequestFullScreen || docEl.msRequestFullscreen;\r\n                var cancelFullScreen = doc.exitFullscreen || doc.mozCancelFullScreen || doc.webkitExitFullscreen || doc.msExitFullscreen;\r\n\r\n                if(!doc.fullscreenElement && !doc.mozFullScreenElement && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\r\n                    requestFullScreen.call(docEl);\r\n                }\r\n                else {\r\n                    cancelFullScreen.call(doc);\r\n                }\r\n            }\r\n\r\n            //loop pool\r\n            $scope.pool = {\r\n                \"loop\": {\r\n                    \"torrent\": 0,\r\n                    \"activeTorrent\": 0,\r\n                    \"session\": 0,\r\n                    \"sessionStats\":0,\r\n                    \"detail\": 0\r\n                },\r\n                \"ajax\": {\r\n                    \"torrent\": {},\r\n                    \"activeTorrent\": {},\r\n                    \"detail\": {},\r\n                    \"fullDetail\": {},\r\n                    \"sessionStats\":{},\r\n                    \"session\":{},\r\n                    \"remove\":{},\r\n                    \"add\":{},\r\n                    \"pause\":{}\r\n                }\r\n            };\r\n\r\n            //数据\r\n            $scope.dataStorage = {\r\n            \tsession: \"\",\r\n                global: {},\r\n                torrent: [],\r\n                selectedIndex: \"\",\r\n                stats: {},\r\n                ids: [],\r\n                detail: {},\r\n                test:0,\r\n                totalSpeed:{\r\n            \t    download:null,\r\n                    upload:null\r\n                }\r\n            };\r\n\r\n            //load local data\r\n            $scope.localMode = false;\r\n\r\n            if ($scope.localMode === true) {\r\n                var deferred = $q.defer();\r\n\r\n                require([\"localData\"], function(localData) {\r\n                    deferred.resolve(localData);\r\n                });\r\n\r\n                deferred.promise.then(function(response) {\r\n                    $scope.dataStorage = {\r\n                        global: response.global,\r\n                        torrent: response.torrent,\r\n                        selectedIndex: response.selectedIndex,\r\n                        stats: response.stats,\r\n                        ids: response.ids,\r\n                        detail: response.detail\r\n                    };\r\n\r\n                    $scope.getTotalSpeed();\r\n                }, function(reason) {\r\n\r\n                });\r\n            }\r\n\r\n            //连续获取seesion\r\n            $scope.pool.loop.session = setInterval(function() {\r\n                $scope.getSession();\r\n            }, 3000);\r\n\r\n            //获取到session后结束循环获取session\r\n            $scope.$on(\"getSessionDone\", function(event) {\r\n                clearInterval($scope.pool.loop.session);\r\n                $scope.getStatsData();\r\n                $scope.loopGetSessionData();\r\n            });\r\n\r\n            $scope.$on(\"getStatsDone\", function() {\r\n                $scope.loopGetTorrentData();\r\n            });\r\n\r\n            $scope.tmpUrl = {\r\n                detail: \"template/detail.html\",\r\n                blankDetail: \"template/blankdetail.html\",\r\n                tips: \"template/tips.html\",\r\n                settings: \"template/settings.html\",\r\n                modal:\"template/tips.html\"\r\n            };\r\n\r\n            $scope.allLoaded = false;\r\n\r\n            document.addEventListener('touchstart', function(event) {\r\n                // 判断默认行为是否可以被禁用\r\n                if (event.cancelable) {\r\n                    // 判断默认行为是否已经被禁用\r\n                    if (!event.defaultPrevented) {\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n            }, false);\r\n        };\r\n\r\n        $scope.init();\r\n\r\n    }]);\r\n\r\n    //inlclude 直接用被嵌套的HTML替换include所在的标签\r\n    $app.directive('includeReplace', function() {\r\n        return {\r\n            require: 'ngInclude',\r\n            restrict: 'A',\r\n            /* optional */\r\n            link: function(scope, el, attrs) {\r\n                el.replaceWith(el.children());\r\n            }\r\n        };\r\n    });\r\n\r\n    return $app;\r\n});\r\n"],"file":"../initConfig.min.js"}