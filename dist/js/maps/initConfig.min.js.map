{"version":3,"sources":["initConfig.js"],"names":["define","$","_","tr","angularAMD","app","angular","module","$app","bootstrap","config","$touchProvider","ngClickOverrideEnabled","factory","$http","$q","ajax","op","deferred","defer","method","url","baseUrl","undefined","headers","sessionId","X-Transmission-Session-Id","data","param","when","response","status","resolve","reject","errService","err","cancel","promise","service","getSession","getSessionStats","serviceAruments","all","torrentSame","detailSame","getTorrent","arguments","fields","concat","getActiveTorrent","ids","getFullDetail","getDetail","startTorrent","stopTorrent","removeFromList","removeAllData","delete-local-data","pauseTransform","startTransform","startTransformNow","controller","$scope","$sce","$timeout","$window","ajaxService","sesseionErrCount","errStartTime","session","pool","then","dataStorage","global","reason","str","temp","start","indexOf","end","substring","length","$emit","Date","getTime","now","stopAllAjax","modal","show","type","content","size","btnType","submitFunc","location","reload","getStatsData","sessionStats","stats","totalSpeed","download","downloadSpeed","upload","uploadSpeed","console","log","getRecentlyActiveTorrentData","activeTorrent","each","torrents","value","index","$index","findIndex","torrent","o","id","merge","getTotalSpeed","sortTorrentData","sortBy","item","addedDate","loopGetTorrentData","obj","push","loop","setInterval","loopFragment","loopGetSessionData","selectTorrent","selectedIndex","detail","close","swip","left","getScreenWidth","consolePanel","right","bytesConvert","bytes","band","parseFloat2","num","parsTorrentClassName","className","parseEta","eta","secondsToTime","getStatusText","metaComplete","howLong","parseInt","getFullDate","ms","parseFullDate","parseText","Status","html","peersSendingToUs","peersConnected","rateDownload","rateUpload","peersGettingFromUs","trustAsHtml","TransformData","metadataPercentComplete","totalSize","percentDone","uploadedEver","uploadRatio","target","tabNames","tabSelect","selectedTabIndex","torrentData","fullDetail","$response","clearInterval","closeAjax","validationIDS","result","window","width","isNeedTitle","title","btnText","submit","$event","stopPropagation","key","addClass","removeClass","document","click","nav","menudata","name","toggle","init","active","doc","docEl","documentElement","requestFullScreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","cancelFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","call","remove","add","pause","test","localMode","require","localData","$on","event","tmpUrl","blankDetail","tips","settings","addEventListener","cancelable","defaultPrevented","preventDefault","directive","restrict","link","scope","el","attrs","replaceWith","children"],"mappings":"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","file":"../initConfig.min.js","sourcesContent":["/**\r\n * Created by vincent on 2017/3/4.\r\n */\r\n\r\ndefine([\"jquery\", \"lodash\", \"transmission\", \"angularAMD\", \"angular-touch\"], function($, _, tr, angularAMD) {\r\n    \"use strict\";\r\n\r\n    var app = angular.module(\"transmission\", [\"ngTouch\"]);\r\n\r\n    var $app = angularAMD.bootstrap(app);\r\n\r\n    $app.config([\"$touchProvider\", function($touchProvider) {\r\n        $touchProvider.ngClickOverrideEnabled([true]);\r\n    }]);\r\n\r\n    $app.factory(\"ajaxService\", [\"$http\", \"$q\", function($http, $q) {\r\n        var service = {};\r\n        var baseUrl = \"/transmission/rpc\";\r\n\r\n        function ajax(op) {\r\n            var deferred = $q.defer();\r\n            var ajax = $http({\r\n                method: \"POST\",\r\n                url: baseUrl + (op.url !== undefined ? op.url : \"\"),\r\n                headers: op.sessionId !== undefined ? { \"X-Transmission-Session-Id\": op.sessionId } : {},\r\n                data: (function() {\r\n                    var param = {};\r\n                    switch (op.param.method) {\r\n                        case \"torrent-get\":\r\n                            param = op.param;\r\n                            break;\r\n                        case \"torrent-remove\":\r\n                            param = op.param;\r\n                            break;\r\n                        default:\r\n                            param = op.param;\r\n                            break;\r\n                    }\r\n                    return param;\r\n                })()\r\n            });\r\n\r\n            $q.when(ajax, function(response, status, headers, config) {\r\n                deferred.resolve(response, status, headers, config);\r\n            }, function(response, status) {\r\n                if (status !== 0) {\r\n                    deferred.reject({\r\n                        errService: op.errService ? op.errService : \"Service Error\",\r\n                        err: op.err,\r\n                        response: response,\r\n                        status: status\r\n                    });\r\n                }\r\n            });\r\n\r\n            return op.cancel === true ? deferred : deferred.promise;\r\n        }\r\n\r\n        service.getSession = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"session-get\"\r\n                },\r\n                url: \"?type=getSession\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getSessionStats = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"session-stats\"\r\n                },\r\n                url: \"?type=getSessionStats\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        var serviceAruments = {\r\n            all:[\"id\"],\r\n            torrentSame: [\"error\", \"errorString\", \"eta\", \"isFinished\", \"isStalled\", \"leftUntilDone\", \"metadataPercentComplete\", \"peersConnected\", \"peersGettingFromUs\", \"peersSendingToUs\", \"percentDone\", \"queuePosition\", \"rateDownload\", \"rateUpload\", \"recheckProgress\", \"seedRatioMode\", \"seedRatioLimit\", \"sizeWhenDone\", \"status\", \"trackers\", \"downloadDir\", \"uploadedEver\", \"uploadRatio\", \"webseedsSendingToUs\"],\r\n            detailSame:[\"activityDate\",\"corruptEver\",\"desiredAvailable\",\"downloadedEver\",\"fileStats\",\"haveUnchecked\",\"haveValid\",\"peers\",\"startDate\",\"trackerStats\"]\r\n        };\r\n\r\n        service.getTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-get\",\r\n                    arguments: {\r\n                        \"fields\": _.concat(serviceAruments.all,serviceAruments.torrentSame,[\r\n                            \"addedDate\",\r\n                            \"name\",\r\n                            \"totalSize\"\r\n                        ])\r\n                    }\r\n                },\r\n                url: \"?type=getTorrent\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getActiveTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-get\",\r\n                    arguments: {\r\n                        fields: _.concat(serviceAruments.all,serviceAruments.torrentSame),\r\n                        ids: \"recently-active\"\r\n                    }\r\n                },\r\n                url: \"?type=getActiveTorrent\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getFullDetail = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-get\",\r\n                    \"arguments\": {\r\n                        \"fields\": _.concat(serviceAruments.all,serviceAruments.detailSame,[\r\n                            \"comment\",\r\n                            \"creator\",\r\n                            \"dateCreated\",\r\n                            \"files\",\r\n                            \"hashString\",\r\n                            \"isPrivate\",\r\n                            \"pieceCount\",\r\n                            \"pieceSize\"\r\n                        ]),\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=getFullDetail\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.getDetail = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-get\",\r\n                    \"arguments\": {\r\n                        \"fields\": _.concat(serviceAruments.all,serviceAruments.detailSame),\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=getDetail\",\r\n                cancel: true\r\n            });\r\n        };\r\n\r\n        service.startTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-start\"\r\n                },\r\n                url: \"?type=startTorrent\"\r\n            });\r\n        };\r\n\r\n        service.stopTorrent = function(sessionId) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    method: \"torrent-stop\"\r\n                },\r\n                url: \"?type=stopTorrent\"\r\n            });\r\n        };\r\n\r\n        service.removeFromList = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-remove\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=removeFromList\"\r\n            });\r\n        };\r\n\r\n        service.removeAllData = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-remove\",\r\n                    \"arguments\": {\r\n                        \"delete-local-data\": true,\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=removeAllData\"\r\n            });\r\n        };\r\n\r\n        service.pauseTransform = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-stop\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=torrent-stop\"\r\n            });\r\n        };\r\n\r\n        service.startTransform = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-start\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=torrent-start\"\r\n            });\r\n        };\r\n\r\n        service.startTransformNow = function(sessionId, ids) {\r\n            return ajax({\r\n                sessionId: sessionId,\r\n                param: {\r\n                    \"method\": \"torrent-start-now\",\r\n                    \"arguments\": {\r\n                        \"ids\": ids\r\n                    }\r\n                },\r\n                url: \"?type=torrent-start-now\"\r\n            });\r\n        };\r\n        return service;\r\n    }]);\r\n\r\n    $app.controller(\"mainController\", [\"$scope\", \"$http\", \"$q\", \"$sce\", \"$timeout\", \"$window\", \"ajaxService\", function($scope, $http, $q, $sce, $timeout, $window, ajaxService) {\r\n\r\n        //获取session\r\n        var sesseionErrCount = 0;\r\n        var errStartTime = \"\";\r\n        $scope.getSession = function(session) {\r\n\r\n            //获取session\r\n            $scope.pool.ajax.session = ajaxService.getSession(session);\r\n            $scope.pool.ajax.session.promise.then(function(response) {\r\n                $scope.dataStorage.global = response.data.arguments;\r\n            }, function(reason) {\r\n                var str = reason.response.data;\r\n                var temp = \"X-Transmission-Session-Id: \";\r\n                var start = str.indexOf(temp);\r\n                var end = str.indexOf(\"<\\/code>\");\r\n                if(start !== -1 && end !== -1){\r\n                    $scope.dataStorage.session = str.substring((start + (temp.length - 1)), end);\r\n                    $scope.$emit(\"getSessionDone\");\r\n                }else{\r\n                    //1分钟内连续错误5次则直接停止所有异步请求，并提示\r\n                    sesseionErrCount += 1;\r\n                    if(sesseionErrCount === 1){\r\n                        errStartTime = new Date().getTime();\r\n                    }else if(sesseionErrCount >= 5){\r\n                        var now = new Date().getTime();\r\n                        if((now - errStartTime) <= 60000){\r\n                            $scope.stopAllAjax();\r\n                            $scope.modal.show({\r\n                                type:\"waring\",\r\n                                content:\"一分钟内请求Session失败次数过多，请检查网络或点击确定重新加载！\",\r\n                                size:\"small\",\r\n                                btnType : 2,\r\n                                submitFunc : function () {\r\n                                    $window.location.reload();\r\n                                }\r\n                            });\r\n                        }else{\r\n                            sesseionErrCount = 0;\r\n                            errStartTime = new Date().getTime();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n\r\n        //获取现在的状态\r\n        $scope.getStatsData = function() {\r\n            //获取session\r\n            $scope.pool.ajax.sessionStats = ajaxService.getSessionStats($scope.dataStorage.session).then(function(response) {\r\n                $scope.dataStorage.stats = response.data.arguments;\r\n                $scope.dataStorage.totalSpeed.download = $scope.dataStorage.stats.downloadSpeed;\r\n                $scope.dataStorage.totalSpeed.upload = $scope.dataStorage.stats.uploadSpeed;\r\n                $scope.$emit(\"getStatsDone\");\r\n            }, function(reason) {\r\n                console.log(\"查询stats失败\");\r\n            });\r\n        };\r\n\r\n        //获取正在活动的Torrent数据\r\n        $scope.getRecentlyActiveTorrentData = function() {\r\n            //获取活动中的torrent数据\r\n            $scope.pool.ajax.activeTorrent = ajaxService.getActiveTorrent($scope.dataStorage.session);\r\n            $scope.pool.ajax.activeTorrent.promise.then(function(response) {\r\n                //替换数据列表中对应的数据\r\n                _.each(response.data.arguments.torrents, function(value, index) {\r\n                    var $index = _.findIndex($scope.dataStorage.torrent, function(o) {\r\n                        return o.id === value.id;\r\n                    });\r\n\r\n                    if ($index > -1) {\r\n                        _.merge($scope.dataStorage.torrent[$index], value);\r\n                    }\r\n                });\r\n                $scope.getTotalSpeed();\r\n            }, function(reason) {\r\n                console.log(\"查询Torrent失败\");\r\n            });\r\n        };\r\n\r\n        //排序种子数据\r\n        $scope.sortTorrentData = function() {\r\n            $scope.dataStorage.torrent = _.sortBy($scope.dataStorage.torrent, function(item) {\r\n                return -item.addedDate;\r\n            });\r\n            $scope.getTotalSpeed();\r\n            return $scope.dataStorage.torrent;\r\n        };\r\n\r\n        //循环获取种子数据\r\n        $scope.loopGetTorrentData = function() {\r\n            //get all torrent(list)\r\n            $scope.pool.ajax.torrent = ajaxService.getTorrent($scope.dataStorage.session);\r\n            $scope.pool.ajax.torrent.promise.then(function(response) {\r\n                $scope.dataStorage.torrent = _.sortBy(response.data.arguments.torrents, function(item) {\r\n                    return -item.addedDate;\r\n                });\r\n\r\n                $scope.dataStorage.ids = [];\r\n                _.each($scope.dataStorage.torrent, function(obj, index) {\r\n                    $scope.dataStorage.ids.push(obj.id);\r\n                });\r\n\r\n                //loop the active torrent\r\n                $scope.pool.ajax.activeTorrent = $scope.getRecentlyActiveTorrentData();\r\n                $scope.pool.loop.activeTorrent = setInterval(function() {\r\n                    $scope.getRecentlyActiveTorrentData();\r\n                }, $scope.loopFragment.torrent);\r\n            }, function(reason) {\r\n                console.log(\"查询Torrent失败\");\r\n            });\r\n        };\r\n\r\n        //循环获取session数据\r\n        $scope.loopGetSessionData = function() {\r\n            $scope.getSession($scope.dataStorage.session);\r\n            $scope.pool.loop.session = setInterval(function() {\r\n                $scope.getSession($scope.dataStorage.session);\r\n            }, $scope.loopFragment.session);\r\n        };\r\n\r\n        //选择某下载任务\r\n        $scope.selectTorrent = function(index) {\r\n            if (index === $scope.dataStorage.selectedIndex) {\r\n                return false;\r\n            }\r\n\r\n            $scope.dataStorage.selectedIndex = index;\r\n            if ($scope.detail.status === true) {\r\n                $scope.detail.close();\r\n                $scope.detail.show();\r\n            }\r\n        };\r\n\r\n        //滑动操作\r\n        $scope.swip = {\r\n            left: function() {\r\n\r\n                if($scope.modal.status === true){\r\n                    return false;\r\n                }\r\n\r\n                if ($scope.getScreenWidth() <= 1024) {\r\n                    if ($scope.consolePanel.status === false && $scope.detail.status === false) {\r\n                        $scope.detail.show();\r\n                    } else if ($scope.consolePanel.status === true && $scope.detail.status === false) {\r\n                        $scope.consolePanel.close();\r\n                    }\r\n                }\r\n            },\r\n            right: function() {\r\n\r\n                if($scope.modal.status === true){\r\n                    return false;\r\n                }\r\n\r\n                if ($scope.getScreenWidth() <= 1024) {\r\n                    if ($scope.consolePanel.status === false && $scope.detail.status === true) {\r\n                        $scope.detail.close();\r\n                    } else if ($scope.consolePanel.status === false && $scope.detail.status === false) {\r\n                        $scope.consolePanel.show();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        //流量转换\r\n        $scope.bytesConvert = function(bytes) {\r\n            var op = {\r\n                \"data\": bytes,\r\n                \"band\": 1000\r\n            };\r\n            return tr.bytesConvert(op);\r\n        };\r\n\r\n        //分析已下载数据\r\n        $scope.parseFloat2 = function(num) {\r\n            return tr.parseFloat2(num);\r\n        };\r\n\r\n        //解析下载任务的样式名\r\n        $scope.parsTorrentClassName = function(status, index) {\r\n            var className = \"\";\r\n            //4正在下载\r\n            switch (status) {\r\n                case 0:\r\n                    className = \"paused\";\r\n                    break;\r\n                case 4:\r\n                    className = \"downloading\";\r\n                    break;\r\n                case 6:\r\n                    className = \"seeding\";\r\n                    break;\r\n                default:\r\n                    className = \"seeding\";\r\n                    break;\r\n            }\r\n            if (index === $scope.dataStorage.selectedIndex) {\r\n                className += \" selected\";\r\n            }\r\n            return className;\r\n        };\r\n\r\n        //解析剩余时间\r\n        $scope.parseEta = function(eta) {\r\n            var str = \"\";\r\n            if (eta === -1) {\r\n                str = \"不可用\";\r\n            } else if (eta === -2) {\r\n                str = \"无法预估\";\r\n            } else {\r\n                str = tr.secondsToTime(eta);\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n        $scope.parseFloat2 = function(num) {\r\n            return tr.parseFloat2(num);\r\n        };\r\n\r\n        //获取状态文本\r\n        $scope.getStatusText = function(op) {\r\n            var str = \"\";\r\n            switch (op.status) {\r\n                case 0:\r\n                    if (op.metaComplete < 1) {\r\n                        str = \"磁性链接下载元数据中\";\r\n                    } else {\r\n                        str = \"已暂停\";\r\n                    }\r\n                    break;\r\n                case 4:\r\n                    str = \"下载中\";\r\n                    break;\r\n                case 6:\r\n                    str = \"做种中\";\r\n                    break;\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n        //获取运行时长\r\n        $scope.howLong = function(start) {\r\n            return $scope.parseEta(parseInt((new Date().getTime()) / 1000) - start);\r\n        };\r\n\r\n        $scope.getFullDate = function(ms) {\r\n            return tr.parseFullDate(ms);\r\n        };\r\n\r\n        //解析torrent列表文字\r\n        $scope.parseText = {\r\n            \"Status\": function(index) {\r\n                var data = $scope.dataStorage.torrent[index];\r\n                var html = \"\";\r\n\r\n                switch (data.status) {\r\n                    case 0:\r\n                        // className = \"paused\";\r\n                        html += \"已暂停\";\r\n                        break;\r\n                    case 4:\r\n                        html += \"下载自\";\r\n                        html += \"<span>\" + data.peersSendingToUs + \"/\" + data.peersConnected + \"个用户</span>\";\r\n                        html += \"<span class=\\\"icon-download\\\">\";\r\n                        html += $scope.bytesConvert(data.rateDownload) + \"/s\";\r\n                        html += \"</span>\";\r\n                        html += \"<span class=\\\"icon-upload\\\">\";\r\n                        html += $scope.bytesConvert(data.rateUpload) + \"/s\";\r\n                        html += \"</span>\";\r\n                        break;\r\n                    case 6:\r\n                        html += \"分享至\";\r\n                        html += \"<span>\" + data.peersGettingFromUs + \"/\" + data.peersConnected + \"个用户</span>\";\r\n                        html += \"<span class=\\\"icon-upload\\\">\";\r\n                        html += $scope.bytesConvert(data.rateUpload) + \"/s\";\r\n                        html += \"</span>\";\r\n                        break;\r\n                    default:\r\n                        // className = \"seeding\";\r\n                        break;\r\n                }\r\n\r\n                return $sce.trustAsHtml(html);\r\n            },\r\n            \"TransformData\": function(index) {\r\n                var data = $scope.dataStorage.torrent[index];\r\n                var html = \"\";\r\n\r\n                switch (data.status) {\r\n                    case 0:\r\n                        // className = \"paused\";\r\n                        if (data.metadataPercentComplete < 1) {\r\n                            html += \"磁性链接\";\r\n                            html += \"<span>\";\r\n                            html += \"下载元数据（\" + (data.metadataPercentComplete < 1 ? tr.parseFloat2(data.metadataPercentComplete * 100) : \"100\") + \"%）\";\r\n                            html += \"</span>\";\r\n                        } else {\r\n                            html += \"已下载\";\r\n                            html += \"<span>\";\r\n                            html += $scope.bytesConvert(data.totalSize * (data.percentDone < 1 ? data.percentDone : 1)) + \"/\" + $scope.bytesConvert(data.totalSize);\r\n                            html += \"</span>\";\r\n                            html += \"<span>\";\r\n                            html += \"(\" + (data.percentDone < 1 ? tr.parseFloat2(data.percentDone * 100) : \"100\") + \"%)\";\r\n                            html += \"</span>\";\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        // className = \"downloading\";,\r\n                        if (data.metadataPercentComplete < 1) {\r\n                            html += \"磁性链接<span> 下载元数据（\" + (data.metadataPercentComplete < 1 ? tr.parseFloat2(data.metadataPercentComplete * 100) : \"100\") + \"）</span>\";\r\n                        } else {\r\n                            html += \"已下载\";\r\n                            html += \"<span>\";\r\n                            html += $scope.bytesConvert(data.totalSize * (data.percentDone < 1 ? data.percentDone : 1)) + \"/\" + $scope.bytesConvert(data.totalSize);\r\n                            html += \"</span>\";\r\n                            html += \"<span>\";\r\n                            html += \"(\" + (data.percentDone < 1 ? tr.parseFloat2(data.percentDone * 100) : \"100\") + \"%)\";\r\n                            html += \"</span>\";\r\n                            if (data.uploadedEver > 0) {\r\n                                html += \"<span>\";\r\n                                html += \"已上传\";\r\n                                html += \"</span>\";\r\n                                html += \"<span>\";\r\n                                html += $scope.bytesConvert(data.uploadedEver);\r\n                                html += \"</span>\";\r\n                            }\r\n                            if ($scope.getScreenWidth() > 1024) {\r\n                                html += \"<span>\";\r\n                                html += \"预估剩余时间：\" + $scope.parseEta(data.eta);\r\n                                html += \"</span>\";\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 6:\r\n                        // className = \"seeding\";\r\n                        html += \"已上传\";\r\n                        html += \"<span>\";\r\n                        html += $scope.bytesConvert(data.uploadedEver) + \"/\" + $scope.bytesConvert(data.totalSize);\r\n                        html += \"</span>\";\r\n                        html += \"<span>\";\r\n                        html += \"分享率(\" + tr.parseFloat2(data.uploadRatio) + \"%)\";\r\n                        html += \"</span>\";\r\n                        if ($scope.getScreenWidth() > 1024) {\r\n                            html += \"<span>\";\r\n                            html += \"预估剩余时间：\" + $scope.parseEta(data.eta);\r\n                            html += \"</span>\";\r\n                        }\r\n                        break;\r\n                    default:\r\n                        // className = \"seeding\";\r\n                        break;\r\n                }\r\n\r\n                return $sce.trustAsHtml(html);\r\n            }\r\n        };\r\n\r\n        //明细\r\n        $scope.detail = {\r\n            \"target\": $(\"#torrent-detail\"),\r\n            \"className\": \"show\",\r\n            \"tabNames\": [\"info\", \"peers\", \"tracker\", \"files\"],\r\n            \"tabSelect\": function(index) {\r\n                $scope.detail.selectedTabIndex = index;\r\n            },\r\n            \"status\": false,\r\n            \"torrentData\": false,\r\n            \"selectedTabIndex\": 0,\r\n            \"show\": function() {\r\n                $scope.detail.status = $scope.detail.status !== true;\r\n\r\n                if ($scope.detail.status === true) {\r\n                    if ($scope.dataStorage.selectedIndex !== '') {\r\n                        $scope.detail.torrentData = $scope.dataStorage.torrent[$scope.dataStorage.selectedIndex];\r\n                        $scope.pool.ajax.fullDetail = ajaxService.getFullDetail($scope.dataStorage.session, [$scope.dataStorage.torrent[$scope.dataStorage.selectedIndex].id]);\r\n                        $scope.pool.ajax.fullDetail.promise.then(function(response) {\r\n                            $scope.dataStorage.detail = response.data.arguments.torrents[0];\r\n                            $scope.pool.loop.detail = setInterval(function() {\r\n                                $scope.pool.ajax.detail = ajaxService.getDetail($scope.dataStorage.session, [$scope.dataStorage.torrent[$scope.dataStorage.selectedIndex].id]);\r\n                                $scope.pool.ajax.detail.promise.then(function($response) {\r\n                                    $scope.dataStorage.detail = _.merge($scope.dataStorage.detail, $response.data.arguments.torrents[0]);\r\n                                }, function(reason) {\r\n                                    console.log(\"维护明细数据失败\");\r\n                                });\r\n                            }, $scope.loopFragment.detail);\r\n                        }, function(reason) {\r\n                            console.log(\"获取明细失败\");\r\n                        });\r\n                    }\r\n                } else {\r\n                    $scope.detail.close();\r\n                }\r\n            },\r\n            \"close\": function() {\r\n                clearInterval($scope.pool.loop.detail);\r\n                $scope.detail.status = false;\r\n                $scope.closeAjax($scope.pool.ajax.fullDetail);\r\n                $scope.closeAjax($scope.pool.ajax.detail);\r\n            }\r\n        };\r\n\r\n        $scope.closeAjax = function(obj) {\r\n            if (typeof obj === \"object\" && typeof obj.resolve === \"function\") {\r\n                obj.resolve();\r\n            }\r\n        };\r\n\r\n        $scope.reload = {\r\n            \"torrent\": function() {\r\n                clearInterval($scope.pool.loop.activeTorrent);\r\n                $scope.closeAjax($scope.pool.ajax.torrent);\r\n                $scope.closeAjax($scope.pool.ajax.activeTorrent);\r\n                $scope.loopGetTorrentData();\r\n            },\r\n            \"detail\": function() {\r\n                clearInterval($scope.pool.loop.detail);\r\n                $scope.closeAjax($scope.pool.ajax.fullDetail);\r\n                $scope.closeAjax($scope.pool.ajax.detail);\r\n            }\r\n        };\r\n\r\n        var validationIDS = function(ids) {\r\n            var result = true;\r\n            if ($scope.dataStorage.torrent.length === 0 || ids === undefined || ids.length === 0 || (ids.length === 1 && ids[0] === undefined)) {\r\n                result = false;\r\n            }\r\n\r\n            if ($(window).width() <= 1024) {\r\n                $scope.consolePanel.status = false;\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        $scope.removeFromList = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            // $scope.dataStorage.session\r\n            ajaxService.removeFromList($scope.dataStorage.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"从下载列表中移除失败\");\r\n            });\r\n        };\r\n\r\n        $scope.removeFromList = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            // $scope.dataStorage.session\r\n            ajaxService.removeAllData($scope.dataStorage.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"从下载列表中移除失败\");\r\n            });\r\n        };\r\n\r\n        $scope.pauseTransform = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            ajaxService.pauseTransform($scope.dataStorage.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"暂停传输任务请求失败！\");\r\n            });\r\n        };\r\n\r\n        $scope.startTransform = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            ajaxService.startTransform($scope.dataStorage.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"暂停传输任务请求失败！\");\r\n            });\r\n        };\r\n\r\n        $scope.startTransformNow = function(ids) {\r\n            if (validationIDS(ids) === false) {\r\n                return false;\r\n            }\r\n            ajaxService.startTransformNow($scope.dataStorage.session, ids).then(function(response) {\r\n                $scope.reload.torrent();\r\n            }, function(reason) {\r\n                console.log(\"暂停传输任务请求失败！\");\r\n            });\r\n        };\r\n\r\n        $scope.consolePanel = {\r\n            status: false,\r\n            show: function() {\r\n                $scope.consolePanel.status = true;\r\n            },\r\n            close: function() {\r\n                $scope.consolePanel.status = false;\r\n            }\r\n        };\r\n\r\n        $scope.modal = {\r\n            \"status\":false,\r\n            \"isNeedTitle\":false,\r\n            \"type\":\"add\",//tip,waring,delete,add,window\r\n            \"size\":\"big\",\r\n            \"title\":\"测试标题\",\r\n            \"content\":\"添加传输任务失败！\",\r\n            \"btnType\":2,//0 只有确定按钮，1 只有取消按钮，2 两个都有\r\n            \"btnText\":{\r\n                \"submit\":\"确定\",\r\n                \"cancel\":\"关闭\"\r\n            },\r\n            \"submitFunc\":function () {\r\n                $scope.modal.close();\r\n            },\r\n            \"show\":function (op) {\r\n                if(op.$event!==null && op.$event!==undefined){\r\n                    op.$event.stopPropagation();\r\n                }\r\n\r\n                if($scope.modal.status === true){\r\n                    return false;\r\n                }\r\n\r\n                var className = \"alpha\";\r\n\r\n                if(op !== undefined){\r\n                    _.each(op,function (value,key) {\r\n                        if(key !== \"show\" && key !== \"close\"){\r\n                            $scope.modal[key] = value;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                $scope.modal.status = $scope.modal.status !== true;\r\n                $timeout(function () {\r\n                    $(\"#modal-bg\").addClass(className);\r\n                    $(\"#modal\").addClass(className);\r\n                },100);\r\n            },\r\n            \"close\":function () {\r\n                var className = \"alpha\";\r\n\r\n                $(\"#modal-bg\").removeClass(className);\r\n                $(\"#modal\").removeClass(className);\r\n                $timeout(function () {\r\n                    $scope.modal.status = false;\r\n                },550);\r\n            }\r\n        };\r\n\r\n        $(document).click(function () {\r\n            if($scope.modal.status === true){\r\n                $scope.modal.close();\r\n            }\r\n        });\r\n\r\n        $scope.nav = {\r\n            status:false,\r\n            menudata:{\r\n                name:[\"设置\",\"计划任务运行\",\"收缩视图\",\"查看传输明细\"],\r\n                className:[\"icon-settings\",\"icon-scheduled\",\"icon-listview\",\"icon-info-black\"]\r\n            },\r\n            toggle:function () {\r\n                $scope.nav.status = $scope.nav.status !== true;\r\n            },\r\n            close:function (index) {\r\n                $scope.nav.status = false;\r\n            }\r\n        };\r\n\r\n        $scope.getTotalSpeed = function () {\r\n            var result = {\r\n                download:0,\r\n                upload:0\r\n            };\r\n\r\n            _.each($scope.dataStorage.torrent,function (obj,index) {\r\n                result.download += (obj.rateDownload === undefined || obj.rateDownload === null) ? 0 :obj.rateDownload;\r\n                result.upload += (obj.rateUpload === undefined || obj.rateUpload === null) ? 0 :obj.rateUpload;\r\n            });\r\n\r\n            $scope.dataStorage.totalSpeed.download = result.download;\r\n            $scope.dataStorage.totalSpeed.upload = result.upload;\r\n        };\r\n\r\n        $scope.getScreenWidth = function () {\r\n            return $(window).width();\r\n        };\r\n\r\n        $scope.stopAllAjax = function () {\r\n            _.each($scope.pool.loop,function (value,key) {\r\n                clearInterval($scope.pool.loop[key]);\r\n            });\r\n            _.each($scope.pool.ajax,function (value,key) {\r\n                $scope.closeAjax($scope.pool.ajax[key]);\r\n            });\r\n        };\r\n\r\n        $scope.init = function() {\r\n\r\n            $scope.loopFragment = {\r\n                torrent: 5000,\r\n                active: 5000,\r\n                detail: 5000,\r\n                session: 15000\r\n            };\r\n\r\n            if($scope.getScreenWidth() >= 1024){\r\n                var doc = window.document;\r\n                var docEl = doc.documentElement;\r\n\r\n                var requestFullScreen = docEl.requestFullscreen || docEl.mozRequestFullScreen || docEl.webkitRequestFullScreen || docEl.msRequestFullscreen;\r\n                var cancelFullScreen = doc.exitFullscreen || doc.mozCancelFullScreen || doc.webkitExitFullscreen || doc.msExitFullscreen;\r\n\r\n                if(!doc.fullscreenElement && !doc.mozFullScreenElement && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\r\n                    requestFullScreen.call(docEl);\r\n                }\r\n                else {\r\n                    cancelFullScreen.call(doc);\r\n                }\r\n            }\r\n\r\n            //loop pool\r\n            $scope.pool = {\r\n                \"loop\": {\r\n                    \"torrent\": 0,\r\n                    \"activeTorrent\": 0,\r\n                    \"session\": 0,\r\n                    \"sessionStats\":0,\r\n                    \"detail\": 0\r\n                },\r\n                \"ajax\": {\r\n                    \"torrent\": {},\r\n                    \"activeTorrent\": {},\r\n                    \"detail\": {},\r\n                    \"fullDetail\": {},\r\n                    \"sessionStats\":{},\r\n                    \"session\":{},\r\n                    \"remove\":{},\r\n                    \"add\":{},\r\n                    \"pause\":{}\r\n                }\r\n            };\r\n\r\n            //数据\r\n            $scope.dataStorage = {\r\n            \tsession: \"\",\r\n                global: {},\r\n                torrent: [],\r\n                selectedIndex: \"\",\r\n                stats: {},\r\n                ids: [],\r\n                detail: {},\r\n                test:0,\r\n                totalSpeed:{\r\n            \t    download:0,\r\n                    upload:0\r\n                }\r\n            };\r\n\r\n            //load local data\r\n            $scope.localMode = true;\r\n\r\n            if ($scope.localMode === true) {\r\n                var deferred = $q.defer();\r\n\r\n                require([\"localData\"], function(localData) {\r\n                    deferred.resolve(localData);\r\n                });\r\n\r\n                deferred.promise.then(function(response) {\r\n                    $scope.dataStorage = {\r\n                        global: response.global,\r\n                        torrent: response.torrent,\r\n                        selectedIndex: response.selectedIndex,\r\n                        stats: response.stats,\r\n                        ids: response.ids,\r\n                        detail: response.detail\r\n                    };\r\n\r\n                    $scope.getTotalSpeed();\r\n                }, function(reason) {\r\n\r\n                });\r\n            }\r\n\r\n            //连续获取seesion\r\n            $scope.pool.loop.session = setInterval(function() {\r\n                $scope.getSession();\r\n            }, 3000);\r\n\r\n            //获取到session后结束循环获取session\r\n            $scope.$on(\"getSessionDone\", function(event) {\r\n                clearInterval($scope.pool.loop.session);\r\n                $scope.getStatsData();\r\n                $scope.loopGetSessionData();\r\n            });\r\n\r\n            $scope.$on(\"getStatsDone\", function() {\r\n                $scope.loopGetTorrentData();\r\n            });\r\n\r\n            $scope.tmpUrl = {\r\n                detail: \"template/detail.html\",\r\n                blankDetail: \"template/blankdetail.html\",\r\n                tips: \"template/tips.html\",\r\n                settings: \"template/settings.html\",\r\n                modal:\"template/tips.html\"\r\n            };\r\n\r\n            document.addEventListener('touchstart', function(event) {\r\n                // 判断默认行为是否可以被禁用\r\n                if (event.cancelable) {\r\n                    // 判断默认行为是否已经被禁用\r\n                    if (!event.defaultPrevented) {\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n            }, false);\r\n        };\r\n\r\n        $scope.init();\r\n\r\n    }]);\r\n\r\n    //inlclude 直接用被嵌套的HTML替换include所在的标签\r\n    $app.directive('includeReplace', function() {\r\n        return {\r\n            require: 'ngInclude',\r\n            restrict: 'A',\r\n            /* optional */\r\n            link: function(scope, el, attrs) {\r\n                el.replaceWith(el.children());\r\n            }\r\n        };\r\n    });\r\n\r\n    return $app;\r\n});\r\n"]}