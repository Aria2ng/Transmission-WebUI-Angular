{"version":3,"sources":["transmission.js"],"names":["define","isEmptyObj","obj","p","c","undefined","parseZero","num","parseFloat","toFixed","bytesConvert","op","isPositiveNum","s","re","test","unit","band","minUnit","data","Math","pow","customUnit","replace","spliceUnit","flowConvert","getDay","type","$fulldate","date","Date","MS","days","theDayObj","theDayMS","getTime","setTime","getFullYear","getMonth","getDate","now","getHours","getMinutes","getSeconds","needMS","parseDate","YY","MM","DD","$date","parseTime","HH","SS","$time","parseFullDate","simple","fullDate","fullTime","getFullTime","secondsToTime","second","time","parseInt","parseFloat2","floorToPercent","str","getPercent","num1","num2","$num","getRatioPercent","limitRatio","ratio","colorGroup"],"mappings":"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","file":"../transmission.min.js","sourcesContent":["/**\r\n * Created by vincent on 2017/3/5.\r\n */\r\ndefine(function () {\r\n    \"use strict\";\r\n\r\n    //解析对象是否为空对象\r\n    var isEmptyObj = function (obj) {\r\n        var p, c = true;\r\n        for (p in obj) {\r\n            if (p === undefined) {\r\n                c = true;\r\n                break;\r\n            } else {\r\n                c = false;\r\n            }\r\n        }\r\n        return c;\r\n    };\r\n\r\n    //解析数据，保留小数点2位并转换为数字类型\r\n    var parseZero = function (num) {\r\n        return num === 0 ? 0 : parseFloat(num.toFixed(2));\r\n    };\r\n\r\n    //容量自动转换器\r\n    var bytesConvert = function (op) {\r\n        // op = {\r\n        //     \"data\": number,需要转换单位的数据，数字类型\r\n        //     \"customUnit\": \"bits\",自定义单位，转换后将会变成K+自定义单位，例如Kbits\r\n        //     \"band\": 1024,转换单位时的整除数，默认是1000(可选参数)\r\n        //     \"minUnit\": \"K\",最小单位，默认为K，当低于K时，需要显示正数时则设为minUnit:true，目前暂时只支持到最小到K和K以下(可选参数)\r\n        //     \"spliceUnit\": true但你需要分开数字和单位时，则需要此参数。输出的数据则变为对象{num:number,unit:\"string\"}(可选参数)\r\n        // }\r\n        var num = \"\";\r\n        var unit = \"\";\r\n        var band = op.band ? op.band : 1000;\r\n\r\n        op.minUnit = op.minUnit ? op.minUnit : \"K\";\r\n\r\n        if (op.minUnit === true) {\r\n            if (op.data < band) {\r\n                num = op.data;\r\n                unit = \"B\";\r\n            }\r\n\r\n            if (op.data >= band && op.data < Math.pow(band, 2)) {\r\n                num = (op.data / Math.pow(band, 1));\r\n                unit = \"KB\";\r\n            }\r\n        }\r\n\r\n        if (op.minUnit === \"K\") {\r\n            if (op.data < Math.pow(band, 2)) {\r\n                num = (op.data / Math.pow(band, 1));\r\n                unit = \"KB\";\r\n            }\r\n        }\r\n\r\n        if (op.data >= Math.pow(band, 2) && op.data < Math.pow(band, 3)) {\r\n            num = (op.data / Math.pow(band, 2));\r\n            unit = \"MB\";\r\n        }\r\n\r\n        if (op.data >= Math.pow(1024, 3) && op.data < Math.pow(band, 4)) {\r\n            num = (op.data / Math.pow(band, 3));\r\n            unit = \"GB\";\r\n        }\r\n\r\n        if (op.data >= Math.pow(1024, 4)) {\r\n            num = (op.data / Math.pow(band, 4));\r\n            unit = \"TB\";\r\n        }\r\n\r\n        function isPositiveNum(s) {//是否为正整数\r\n            var re = /^[0-9]*[1-9][0-9]*$/;\r\n            return re.test(s);\r\n        }\r\n\r\n        if (num === 0) {\r\n            num = 0;\r\n        }\r\n\r\n        if (num > 0) {\r\n            if (isPositiveNum(num) === false) {\r\n                num = num.toFixed(2);\r\n            }\r\n        }\r\n\r\n        unit = op.customUnit !== undefined ? unit.replace(\"B\", op.customUnit) : unit;\r\n\r\n        return op.spliceUnit === true ? {num: num, unit: unit} : num + unit;\r\n    };\r\n\r\n    //流量自动转换器\r\n    var flowConvert = function (op) {\r\n        return bytesConvert(op);\r\n    };\r\n\r\n    //获取指定日期的时间戳，正整数为今天以后，负整数为今天以前，0为今天\r\n    var getDay = function (op) {\r\n        if (!op) {\r\n            op = {};\r\n        }\r\n        if (op.type === undefined) {\r\n            op.type = \"YYYY/MM/DD\";\r\n        }\r\n\r\n        var $fulldate = \"\";\r\n        var date = new Date();\r\n        var MS = (function () {\r\n            return 1000 * 60 * 60 * 24 * (op.days !== undefined ? op.days : 1);\r\n        })();\r\n\r\n        var theDayObj = new Date();\r\n        var theDayMS = date.getTime() + MS;\r\n\r\n        theDayObj.setTime(theDayMS);\r\n\r\n        //读取默认格式\r\n        if (op.type === \"YYYY/MM/DD\") {\r\n            $fulldate = theDayObj.getFullYear() + \"/\" + (theDayObj.getMonth() + 1) + \"/\" + theDayObj.getDate();\r\n        }\r\n\r\n        //是否以此时此刻开始计算\r\n        if (op.now === true) {\r\n            $fulldate += \" \" + theDayObj.getHours() + \":\" + theDayObj.getMinutes() + \":\" + theDayObj.getSeconds();\r\n        } else {\r\n            $fulldate += \" 00:00:00\";\r\n        }\r\n\r\n        //是否需要转换成毫秒\r\n        if (op.needMS === true) {\r\n            $fulldate = new Date($fulldate).getTime();\r\n        }\r\n\r\n        return $fulldate;\r\n    };\r\n\r\n    //转换时间中小时，分钟，秒小于10的时候拼接为00:00:00格式\r\n    var parseDate = function (YY, MM, DD) {\r\n        var $date = \"\";\r\n\r\n        if (YY === 0 && MM === 0 && DD === 0) {\r\n            $date = \"\";\r\n        } else {\r\n            if (YY < 10) {\r\n                $date += \"0\" + YY;\r\n            } else {\r\n                $date += YY;\r\n            }\r\n\r\n            if (MM < 10) {\r\n                $date += \"-0\" + MM;\r\n            } else {\r\n                $date += \"-\" + MM;\r\n            }\r\n\r\n            if (DD !== undefined) {\r\n                if (DD < 10) {\r\n                    $date += \"-0\" + DD;\r\n                } else {\r\n                    $date += \"-\" + DD;\r\n                }\r\n            }\r\n        }\r\n        return $date;\r\n    };\r\n\r\n    //转换时间中小时，分钟，秒小于10的时候拼接为00:00:00格式\r\n    var parseTime = function (HH, MM, SS) {\r\n        var $time = \"\";\r\n\r\n        if (HH === 0 && MM === 0 && SS === 0) {\r\n            $time = \"\";\r\n        } else {\r\n            if (HH < 10) {\r\n                $time += \"0\" + HH;\r\n            } else {\r\n                $time += HH;\r\n            }\r\n\r\n            if (MM < 10) {\r\n                $time += \":0\" + MM;\r\n            } else {\r\n                $time += \":\" + MM;\r\n            }\r\n\r\n            if (SS !== undefined) {\r\n                if (SS < 10) {\r\n                    $time += \":0\" + SS;\r\n                } else {\r\n                    $time += \":\" + SS;\r\n                }\r\n            }\r\n        }\r\n        return $time;\r\n    };\r\n\r\n    var parseFullDate = function (date, simple) {\r\n        var $date = new Date(date);\r\n        var fullDate = parseDate($date.getFullYear(), $date.getMonth() + 1, $date.getDate());\r\n        var fullTime = parseTime($date.getHours(), $date.getMinutes(), $date.getSeconds());\r\n        return simple !== true ? fullDate + \" \" + fullTime : fullDate;\r\n    };\r\n\r\n    var getFullTime = function($date){\r\n        return parseTime($date.getHours(), $date.getMinutes(), $date.getSeconds());\r\n    }\r\n\r\n    var secondsToTime = function (second) {\r\n        if (!second) {\r\n            return 0;\r\n        }\r\n        var time = '';\r\n        if(second >= 24 * 3600 * 365){\r\n            time += parseInt(second / (24 * 3600 * 365)) + '年';\r\n            second %= 24 * 3600 * 365;\r\n        }\r\n\r\n        if (second >= 24 * 3600) {\r\n            time += parseInt(second / (24 * 3600)) + '天';\r\n            second %= 24 * 3600;\r\n        }\r\n        if (second >= 3600) {\r\n            time += parseInt(second / 3600) + '小时';\r\n            second %= 3600;\r\n        }\r\n        if (second >= 60) {\r\n            time += parseInt(second / 60) + '分钟';\r\n            second %= 60;\r\n        }\r\n        if (second > 0) {\r\n            time += second + '秒';\r\n        }\r\n        return time;\r\n    };\r\n\r\n    //保留小数点后面两位并转化为浮点数字类型\r\n    var parseFloat2 = function (num) {\r\n        return parseFloat((parseZero(num)).toFixed(2));\r\n    };\r\n\r\n    var floorToPercent = function (num) {\r\n        var str = \"\";\r\n        if(num%1===0){\r\n            str = num*100 + \"%\";\r\n        }else{\r\n            str = parseInt(num*100) + \"%\";\r\n        }\r\n        return str;\r\n    };\r\n\r\n    var getPercent = function (num1,num2) {\r\n        var $num = 0;\r\n        if(num1 === num2){\r\n            $num = 100;\r\n        }else{\r\n            $num = parseFloat((num1 / num2).toFixed(2));\r\n        }\r\n        return $num;\r\n    };\r\n\r\n    var getRatioPercent = function(limitRatio,ratio){\r\n        return parseFloat((ratio/limitRatio).toFixed(4))*100 + \"%\";\r\n    };\r\n\r\n    //图表组件默认颜色组\r\n    var colorGroup = [\"#F7DC6F\", \"#A9CCE3\", \"#D7BDE2\", \"#AF7AC5\", \"#26C6DA\", \"#7986CB\", \"#A3E4D7\", \"#52BE80\", \"#E59866\", \"#B2BABB\", \"#F1948A\", \"#3498DB\", \"#D0D3D4\", \"#E74C3C\", \"#9FA8DA\", \"#A1887F\", \"#C5E1A5\", \"#FFC107\"];\r\n\r\n    return {\r\n        \"isEmptyObj\": isEmptyObj,\r\n        \"parseZero\": parseZero,\r\n        \"flowConvert\": flowConvert,\r\n        \"bytesConvert\": bytesConvert,\r\n        \"getDay\": getDay,\r\n        \"parseDate\": parseDate,\r\n        \"parseTime\": parseTime,\r\n        \"parseFullDate\": parseFullDate,\r\n        \"parseFloat2\": parseFloat2,\r\n        \"secondsToTime\":secondsToTime,\r\n        \"colorGroup\":colorGroup,\r\n        \"floorToPercent\":floorToPercent,\r\n        \"getPercent\":getPercent,\r\n        \"getRatioPercent\":getRatioPercent,\r\n        \"getFullTime\":getFullTime\r\n    };\r\n});"]}